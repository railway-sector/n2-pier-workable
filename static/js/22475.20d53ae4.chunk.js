"use strict";(self.webpackChunkn2_pier_workable=self.webpackChunkn2_pier_workable||[]).push([[22475],{2086:(e,t,r)=>{function n(e){const{options:t,value:r}=e;return"number"==typeof t[r]}function s(e){let t="";for(const r in e){const s=e[r];if("boolean"==typeof s)s&&(t+=`#define ${r}\n`);else if("number"==typeof s)t+=`#define ${r} ${s.toFixed()}\n`;else if("object"==typeof s)if(n(s)){const{value:e,options:n,namespace:o}=s,i=o?`${o}_`:"";for(const r in n)t+=`#define ${i}${r} ${n[r].toFixed()}\n`;t+=`#define ${r} ${i}${e}\n`}else{const e=s.options;let n=0;for(const r in e)t+=`#define ${e[r]} ${(n++).toFixed()}\n`;t+=`#define ${r} ${e[s.value]}\n`}}return t}r.d(t,{I:()=>s})},22475:(e,t,r)=>{r.r(t),r.d(t,{BufferObject:()=>n.g,FramebufferObject:()=>s.H,Program:()=>o.B,ProgramCache:()=>i.J,Renderbuffer:()=>a.l,ShaderCompiler:()=>l.Z,Texture:()=>f.g,VertexArrayObject:()=>c.Z,createProgram:()=>u.r,glslifyDefineMap:()=>d.I});var n=r(76718),s=r(12331),o=r(44488),i=r(46082),a=r(62881),l=r(78403),f=r(29492),c=r(36911),d=r(2086),u=r(26373)},26373:(e,t,r)=>{r.d(t,{r:()=>s});var n=r(44488);function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return new n.B(e,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}},78403:(e,t,r)=>{r.d(t,{Z:()=>n});class n{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const n=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let s=n.exec(r);const o=[];for(;null!=s;)o.push({path:s[1],start:s.index,length:s[0].length}),s=n.exec(r);let i=0,a="";return o.forEach(e=>{a+=r.slice(i,e.start),a+=t.has(e.path)?"":this._resolve(e.path,t),i=e.start+e.length}),a+=r.slice(i),t.set(e,a),a}_read(e){return this._readFile(e)}}}}]);
//# sourceMappingURL=22475.20d53ae4.chunk.js.map