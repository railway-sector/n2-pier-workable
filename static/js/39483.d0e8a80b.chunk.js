"use strict";(self.webpackChunkn2_pier_workable=self.webpackChunkn2_pier_workable||[]).push([[39483],{39483:(e,r,t)=>{t.r(r),t.d(r,{getGeometryServiceURL:()=>c,projectGeometry:()=>g});var n=t(86560),i=t(50076),o=t(65308),l=t(71334),a=t(70414);async function c(){let e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1?arguments[1]:void 0;if(n.A.geometryServiceUrl)return n.A.geometryServiceUrl;if(!r)throw new i.A("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");e="portal"in r?r.portal||o.A.getDefault():r,await e.load({signal:t});const l=e.helperServices?.geometry?.url;if(!l)throw new i.A("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");return l}async function g(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3?arguments[3]:void 0;const o=await c(t,n),g=new a.A({geometries:[e],outSpatialReference:r}),u=await(0,l.C)(o,g,{signal:n});if(u&&Array.isArray(u)&&1===u.length)return u[0];throw new i.A("internal:geometry-service-projection-failed","Geometry projection failed on service")}}}]);
//# sourceMappingURL=39483.d0e8a80b.chunk.js.map