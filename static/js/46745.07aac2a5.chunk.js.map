{"version":3,"file":"static/js/46745.07aac2a5.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/libs/basisu/BasisUEncoder.js","../node_modules/@arcgis/core/libs/dxtEncoder/DXTEncoder.js","../node_modules/@arcgis/core/views/support/TextureCompressionWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{getAssetUrl as s}from\"../../assets.js\";function i(){return t??=(async()=>{const i=await import(\"../../chunks/basis_encoder.js\"),t=await i.default({locateFile:i=>s(`esri/libs/basisu/${i}`)});return t.initializeBasis(),t})(),t}let t;export{i as getBasisEncoder};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{getAssetUrl as t}from\"../../assets.js\";function e(){return r??=(async()=>{const e=await import(\"../../chunks/dxt_encoder.js\");return await e.default({locateFile:e=>t(`esri/libs/dxtEncoder/${e}`)})})(),r}let r;export{e as getDXTEncoder};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{getBasisEncoder as e}from\"../../libs/basisu/BasisUEncoder.js\";import{TextureFormat as t}from\"../../libs/basisu/TextureFormat.js\";import{getDXTEncoder as n}from\"../../libs/dxtEncoder/DXTEncoder.js\";import{CompressedTextureFormat as r}from\"../webgl/enums.js\";let a,s,l=null,i=null;class o{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}async function u(e){let t;if(t=e.data instanceof ImageBitmap?p(e.data):m(e.data,e.width,e.height,e.components,e.needsFlip),e.hasS3TC){i||await h();const n=new Uint8Array(t.length);if(i?.encode(t,e.width,e.height,e.preMultiplyAlpha,n)){const e=M(n,!0),t=[n.buffer];return{result:new o(e?.internalFormat??null,e?.textureData??null),transferList:t}}return{result:new o(null,null)}}if(e.hasETC){if(l||await c(),e.preMultiplyAlpha&&!i&&await h(),e.preMultiplyAlpha){const n=new Uint8ClampedArray(t.length);i?.premultiply(new Uint8Array(t),e.width,e.height,n),t=n}const n=await d(t,e.width,e.height,e.hasMipmap),r=n?await f(n):null,a=r?.compressedTexture?.levels.map((e=>e.buffer))||[];return{result:new o(r?.internalFormat??null,r?.compressedTexture??null),transferList:a}}return{result:new o(null,null)}}async function c(){l||(l=await(a??=e()))}async function h(){i||(i=await(s??=n()))}async function d(e,t,n,r,a=255,s=0,i=!1,o=!1){if(!l)return null;const u=new l.BasisEncoder;u.setPerceptual(!o),u.setCheckForAlpha(!0),u.setForceAlpha(!1),u.setRenormalize(o),u.setMipGen(r),u.setMipSRGB(!o),u.setCreateKTX2File(!0),u.setKTX2SRGBTransferFunc(!o),u.setQualityLevel(a),u.setCompressionLevel(s);const c=new Uint8Array(e.byteLength);u.setSliceSourceImage(0,new Uint8Array(e),t,n,i);const h=u.encode(c),d=new Uint8Array(c.buffer,0,h),f=new l.KTX2File(new Uint8Array(d));return f.isValid()?(u.delete(),d):(f.close(),f.delete(),u.delete(),null)}async function f(e){if(!l)return new o(null,null);const n=new l.KTX2File(new Uint8Array(e));n.startTranscoding();const[a,s]=n.getHasAlpha()?[t.ETC2_RGBA,r.COMPRESSED_RGBA8_ETC2_EAC]:[t.ETC1_RGB,r.COMPRESSED_RGB8_ETC2],i=n.getLevels(),u=[];for(let t=0;t<i;t++)u.push(new Uint8Array(n.getImageTranscodedSizeInBytes(t,0,0,a))),n.transcodeImage(u[t],t,0,0,a,0,-1,-1);return n.close(),n.delete(),{internalFormat:s,compressedTexture:{type:\"compressed\",levels:u}}}function p(e){const t=new OffscreenCanvas(e.width,e.height),n=t.getContext(\"2d\");n.drawImage(e,0,0);return n.getImageData(0,0,t.width,t.height).data}function m(e,t,n,r,a){const s=new Uint8ClampedArray(e).subarray(0,t*n*r);if(!a)return s;const l=new Uint8ClampedArray(s.length),i=t*r;for(let o=0;o<n;o++){const e=o*i,t=(n-o-1)*i;l.set(s.subarray(e,e+i),t)}return l}const w=31,y=1,T=2,A=3,C=4,g=7,E=21,b=131072;function S(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const _=S(\"DXT1\"),D=S(\"DXT3\"),R=S(\"DXT5\");function M(e,t){const n=new Int32Array(e.buffer,e.byteOffset,w);let a,s;switch(n[E]){case _:a=8,s=r.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case D:a=16,s=r.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case R:a=16,s=r.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,i=n[C],o=n[A];(3&i||3&o)&&(i=i+3&-4,o=o+3&-4);const u=i,c=o;let h,d;n[T]&b&&!1!==t&&(l=Math.max(1,n[g]));let f=e.byteOffset+n[y]+4;const p=[];for(let r=0;r<l;++r)d=(i+3>>2)*(o+3>>2)*a,h=new Uint8Array(e.buffer,f,d),p.push(h),f+=d,i=Math.max(1,i>>1),o=Math.max(1,o>>1);return{textureData:{type:\"compressed\",levels:p},internalFormat:s,width:u,height:c}}export{o as TextureCompressionWorkerOutput,u as compress,d as compressRGBADataToKTX2,f as createTextureDataKTX2,c as initializeBasisEncoder,h as initializeDXTEncoder};\n"],"names":["t","r","a","s","l","i","o","constructor","e","this","internalFormat","compressedTexture","async","u","data","ImageBitmap","OffscreenCanvas","width","height","n","getContext","drawImage","getImageData","p","Uint8ClampedArray","subarray","length","set","m","components","needsFlip","hasS3TC","h","Uint8Array","encode","preMultiplyAlpha","Int32Array","buffer","byteOffset","w","E","_","COMPRESSED_RGB_S3TC_DXT1_EXT","D","COMPRESSED_RGBA_S3TC_DXT3_EXT","R","COMPRESSED_RGBA_S3TC_DXT5_EXT","C","A","c","d","T","b","Math","max","g","f","y","push","textureData","type","levels","M","result","transferList","hasETC","premultiply","hasMipmap","map","default","locateFile","initializeBasis","arguments","undefined","BasisEncoder","setPerceptual","setCheckForAlpha","setForceAlpha","setRenormalize","setMipGen","setMipSRGB","setCreateKTX2File","setKTX2SRGBTransferFunc","setQualityLevel","setCompressionLevel","byteLength","setSliceSourceImage","KTX2File","isValid","delete","close","startTranscoding","getHasAlpha","ETC2_RGBA","COMPRESSED_RGBA8_ETC2_EAC","ETC1_RGB","COMPRESSED_RGB8_ETC2","getLevels","getImageTranscodedSizeInBytes","transcodeImage","S","charCodeAt"],"sourceRoot":""}