"use strict";(self.webpackChunkn2_pier_workable=self.webpackChunkn2_pier_workable||[]).push([[49237],{8350:(e,t,s)=>{s.d(t,{H:()=>h});var i=s(35143),r=s(46053),a=(s(81806),s(76460),s(47249),s(85842)),n=s(69098),o=s(42553),l=s(40565),c=s(6409),u=s(88205);let f=class extends(n.A.ClonableMixin(o.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,i._)([(0,r.MZ)({type:String,json:{write:{isRequired:!0}}})],f.prototype,"name",void 0),(0,i._)([(0,r.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,c.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],f.prototype,"method",void 0),(0,i._)([(0,r.MZ)({type:String,json:{write:{isRequired:!0}}})],f.prototype,"value",void 0),(0,i._)([(0,r.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],f.prototype,"bandIds",void 0),(0,i._)([(0,r.MZ)({types:u.uy,json:{write:!0,origins:{"web-scene":{types:u.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],f.prototype,"renderer",void 0),f=(0,i._)([(0,a.$)("esri.renderers.support.RasterPresetRenderer")],f);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,i._)([(0,r.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,i._)([(0,r.MZ)({type:[f],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,i._)([(0,a.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},25213:(e,t,s)=>{s.d(t,{E9:()=>d,Tw:()=>h,X6:()=>p});var i=s(3825),r=s(76797),a=s(19247),n=s(13312),o=s(23032),l=s(49653),c=s(54994),u=s(77725);async function f(e,t,s){const f=(0,c.Dl)(e),{rasterFunction:h,sourceJSON:p}=t||{},d=h?JSON.stringify(h.rasterFunctionDefinition||h):null,m=(0,c.lF)({...f.query,renderingRule:d,f:"json"}),y=(0,c.jV)(m,s);e=f.path;const g=p||await(0,i.A)(e,y).then(e=>e.data),x=g.hasRasterAttributeTable?(0,i.A)(`${e}/rasterAttributeTable`,y):null,w=g.hasColormap?(0,i.A)(`${e}/colormap`,y):null,v=g.hasHistograms?(0,i.A)(`${e}/histograms`,y):null,I=g.currentVersion>=10.3?(0,i.A)(`${e}/keyProperties`,y):null,b=g.hasMultidimensions?(0,i.A)(`${e}/multidimensionalInfo`,y):null,S=await Promise.allSettled([x,w,v,I,b]);let _=null;if(g.minValues&&g.minValues.length===g.bandCount){_=[];for(let e=0;e<g.minValues.length;e++)_.push({min:g.minValues[e],max:g.maxValues[e],avg:g.meanValues[e],stddev:g.stdvValues[e]})}const T=r.A.fromJSON(g.extent),R=Math.ceil(T.width/g.pixelSizeX-.1),A=Math.ceil(T.height/g.pixelSizeY-.1),C=n.A.fromJSON(g.spatialReference||g.extent.spatialReference),M="fulfilled"===S[0].status?S[0].value?.data:null,O=M?.features?.length?u.A.fromJSON(M):null,F="fulfilled"===S[1].status?S[1].value?.data.colormap:null,k=F?.length?F:null,P="fulfilled"===S[2].status?S[2].value?.data.histograms:null,N=P?.[0]?.counts?.length?P:null,D="fulfilled"===S[3].status?S[3].value?.data??{}:{},E="fulfilled"===S[4].status?S[4].value?.data.multidimensionalInfo:null,B=E?.variables?.length?E:null;B&&B.variables.forEach(e=>{e.statistics?.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),e.dimensions?.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});const{defaultVariable:L,serviceDataType:J}=g;L&&L!==D.DefaultVariable&&(D.DefaultVariable=L),J?.includes("esriImageServiceDataTypeVector")&&!J.includes(D.DataType)&&(D.DataType=J.replace("esriImageServiceDataType",""));let z=g.noDataValue;g.noDataValues?.length&&g.noDataValues.some(e=>e!==z)&&(z=g.noDataValues);const V=g.transposeInfo?new l.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new a.A({x:g.extent.xmin,y:g.extent.ymax,spatialReference:C}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(R,A))/Math.LN2-8)),transposeInfo:g.transposeInfo}):void 0;return new o.A({width:R,height:A,bandCount:g.bandCount,extent:r.A.fromJSON(g.extent),spatialReference:C,pixelSize:new a.A({x:g.pixelSizeX,y:g.pixelSizeY,spatialReference:C}),pixelType:g.pixelType.toLowerCase(),statistics:_,attributeTable:O,colormap:k,histograms:N,keyProperties:D,noDataValue:z,multidimensionalInfo:B,storageInfo:V})}function h(e,t,s){return f(e,{sourceJSON:t},s)}function p(e,t,s){return f(e,{rasterFunction:t},s)}function d(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},26855:(e,t,s)=>{s.d(t,{A:()=>c});var i,r=s(35143),a=s(46053),n=(s(81806),s(76460),s(47249),s(6409)),o=s(85842),l=s(75116);let c=i=class extends l.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new i({tolerance:this.tolerance})}};(0,r._)([(0,n.e)({GCSShiftXform:"gcs-shift"})],c.prototype,"type",void 0),(0,r._)([(0,a.MZ)()],c.prototype,"tolerance",void 0),c=i=(0,r._)([(0,o.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],c)},29754:(e,t,s)=>{s.d(t,{A:()=>m});var i,r=s(35143),a=s(46053),n=(s(81806),s(76460),s(47249),s(6409)),o=s(28379),l=s(85842),c=s(17707),u=s(76797),f=s(19247),h=s(75116);function p(e,t,s){const{x:i,y:r}=t;if(s<2)return{x:e[0]+i*e[2]+r*e[4],y:e[1]+i*e[3]+r*e[5]};if(2===s){const t=i*i,s=r*r,a=i*r;return{x:e[0]+i*e[2]+r*e[4]+t*e[6]+a*e[8]+s*e[10],y:e[1]+i*e[3]+r*e[5]+t*e[7]+a*e[9]+s*e[11]}}const a=i*i,n=r*r,o=i*r,l=a*i,c=a*r,u=i*n,f=r*n;return{x:e[0]+i*e[2]+r*e[4]+a*e[6]+o*e[8]+n*e[10]+l*e[12]+c*e[14]+u*e[16]+f*e[18],y:e[1]+i*e[3]+r*e[5]+a*e[7]+o*e[9]+n*e[11]+l*e[13]+c*e[15]+u*e[17]+f*e[19]}}function d(e,t,s){const{xmin:i,ymin:r,xmax:a,ymax:n,spatialReference:o}=t;let l=[];if(s<2)l.push({x:i,y:n}),l.push({x:a,y:n}),l.push({x:i,y:r}),l.push({x:a,y:r});else{let e=10;for(let t=0;t<e;t++)l.push({x:i,y:r+(n-r)*t/(e-1)}),l.push({x:a,y:r+(n-r)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:i+(a-i)*t/e,y:r}),l.push({x:i+(a-i)*t/e,y:n})}l=l.map(t=>p(e,t,s));const c=l.map(e=>e.x),f=l.map(e=>e.y);return new u.A({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,f),ymax:Math.max.apply(null,f),spatialReference:o})}let m=i=class extends h.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:s,coeffY:i}=t;if(!s?.length||!i?.length||s.length!==i.length)return null;const r=[];for(let a=0;a<s.length;a++)r.push(s[a]),r.push(i[a]);return r}writeForwardCoefficients(e,t,s){const i=[],r=[];for(let a=0;a<e?.length;a++)a%2==0?i.push(e[a]):r.push(e[a]);t.coeffX=i,t.coeffY=r}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,s,i,r,a,n]=e,o=i*n-a*r,l=a*r-i*n;return[(a*s-t*n)/o,(i*s-t*r)/l,n/o,r/l,-a/o,-i/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:s,inverseCoeffY:i}=t;if(!s?.length||!i?.length||s.length!==i.length)return null;const r=[];for(let a=0;a<s.length;a++)r.push(s[a]),r.push(i[a]);return r}writeInverseCoefficients(e,t,s){const i=[],r=[];for(let a=0;a<e?.length;a++)a%2==0?i.push(e[a]):r.push(e[a]);t.inverseCoeffX=i,t.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=p(this.forwardCoefficients,e,this.polynomialOrder);return new f.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=p(this.inverseCoefficients,e,this.polynomialOrder);return new f.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return d(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new i({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,r._)([(0,a.MZ)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,r._)([(0,a.MZ)()],m.prototype,"forwardCoefficients",void 0),(0,r._)([(0,o.w)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,r._)([(0,c.K)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,r._)([(0,a.MZ)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,r._)([(0,o.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,r._)([(0,c.K)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,r._)([(0,a.MZ)()],m.prototype,"affectsPixelSize",null),(0,r._)([(0,n.e)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=i=(0,r._)([(0,l.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],m)},49237:(e,t,s)=>{s.r(t),s.d(t,{default:()=>Ze});var i=s(35143),r=s(16868),a=s(69098),n=s(50076),o=s(76460),l=s(77717),c=s(50346),u=s(68134),f=s(46053),h=s(40565),p=s(81806),d=(s(47249),s(85842)),m=s(25515),y=s(19502),g=s(65624),x=s(31362),w=s(24709),v=s(11270),I=s(94729),b=s(84008),S=s(8350),_=s(21617),T=s(5682),R=s(78817),A=s(95363),C=s(44135),M=s(51939),O=s(44038),F=s(17775),k=s(16175),P=s(10410),N=s(69539),D=s(76797),E=s(13312),B=s(38042),L=s(66486),J=s(52297);function z(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function V(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function U(e){const{axes:t}=e.domain,s=Object.keys(t),i=[],r=[];let a=-1,n=-1,o=[];for(let x=0;x<s.length;x++){const e=s[x];z(e)?a=x:V(e)&&(n=x);const l=t[e],c=[];if("values"in l){l.values.forEach(e=>c.push("string"==typeof e?new Date(e).getTime():e));const e=c[1]-c[0];i.push([c[0]-.5*e,c[c.length-1]+.5*e]),r.push(e)}else{const{start:e,stop:t,num:s}=l,a=(t-e)/(s-1);i.push([e-.5*a,t+.5*a]),r.push(a);for(let i=0;i<s;i++)c.push(e+a*i)}o.push({name:e,values:c,extent:[c[0],c[c.length-1]]})}a>-1&&-1===n?n=0===a?1:0:n>-1&&-1===a?a=0===n?1:0:-1===n&&-1===a&&(a=0,n=1),o=o.filter((e,t)=>!(t===a||t===n));const{referencing:l}=e.domain,c=l.find(e=>e.coordinates.includes(s[a])).system.id,u=c?.slice(c.lastIndexOf("/")+1),f=null==u||"CRS84"===u?4326:Number(u),h=new E.A({wkid:f}),[p,d]=i[a],[m,y]=i[n],g=new D.A({xmin:p,xmax:d,ymin:m,ymax:y,spatialReference:h});return{width:Math.round(g.width/r[a]),height:Math.round(g.height/r[n]),extent:g,dimensions:o}}function j(e){const t=(0,B.ZS)()?.language;return t?e[t]??Object.values(e)[0]:Object.values(e)[0]}function H(){return Math.round(255*Math.random())}function Z(e){const t={},{parameters:s}=e;if(!s)return t;for(const[i,r]of Object.entries(s)){const{type:e,description:s,unit:a,categoryEncoding:n,observedProperty:o}=r;if("Parameter"===e&&(t[i]={},s&&(t[i].description=j(s)),a&&(t[i].unit=a.label?j(a.label):null,t[i].symbol=a.symbol?.value),n)){const e=Object.entries(n).map((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1}));let s=!1;o?.categories?.length&&(o.categories.forEach(t=>{if(!t.id)return;const i=t.id.slice(t.id.lastIndexOf("/")+1),r=e.find(e=>e.ClassName===i);if(!r)return;const a=t.label?j(t.label):null;if(r.Label=a,t.preferredColor){const e=N.A.fromHex(t.preferredColor);e&&(s=!0,r.Red=e.r,r.Green=e.g,r.Blue=e.b)}}),s&&e.forEach(e=>{null==e.Red&&(e.Red=H(),e.Green=H(),e.Blue=H())}));const r={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map(e=>({attributes:e}))};s&&r.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[i].attributeTable=r}}return t}function G(e){let t=Number.MAX_VALUE,s=-Number.MAX_VALUE;for(let i=0;i<e.length;i++){const r=e[i];null!=r&&(r<t&&(t=r),r>s&&(s=r))}return(0,J.X1)(t,s)}function q(e,t,s){const i=e.map((e,s)=>({name:e,count:t[s]})).sort((e,t)=>e.name>t.name?-1:1),r=(a=1,e=>a*=e.count);var a;const n=[...i.slice(1),{name:"",count:1}].reverse().map(r).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=n[i.findIndex(t=>{let{name:s}=t;return s===e[l]})]*(s%t[l]),s=Math.floor(s/t[l]);return o}var W=s(15359),$=s(23032),X=s(68347),Y=s(52494),K=s(86866);let Q=class extends P.A{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._pixelBlockTiles){const{rasterInfo:r}=this,[a,n]=r.storageInfo.tileInfo.size,{sliceId:o}=i,{pixelBlocks:l}=this.source,c={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==r.dataType,tileSize:{width:a,height:n},level:e,row:t,col:s},u=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,i):(0,Y.J$)(c);return Promise.resolve(u)}const r=this._pixelBlockTiles.get(`${e}/${t}/${s}`);return Promise.resolve(r)}async _open(e){const t=this.source,{pixelBlocks:s,attributeTable:i,statistics:r,histograms:a,name:n,nativeExtent:o,transform:l}=t,c=s[0],{width:u,height:f,pixelType:h}=c,p=t.extent??new D.A({xmin:-.5,ymin:.5,xmax:u-.5,ymax:f-.5,spatialReference:new E.A({wkid:3857})}),d=t.isPseudoSpatialReference??!t.extent,m={x:p.width/u,y:p.height/f},y={...t.keyProperties};i&&(y.DataType="Thematic");const g=new $.A({width:u,height:f,pixelType:h,extent:p,nativeExtent:o,attributeTable:i,transform:l,pixelSize:m,spatialReference:p.spatialReference,bandCount:c.pixels.length,keyProperties:y,multidimensionalInfo:t.multidimensionalInfo,statistics:r,isPseudoSpatialReference:d,histograms:a});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(g),this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),g.multidimensionalInfo?await this._buildMDimStats(t.pixelBlocks,g.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},e),g.multidimensionalInfo||(this.source=null),this.datasetName=n}async _buildInMemoryRaster(e,t,s){const{rasterInfo:i}=this,r=i.storageInfo.maximumPyramidLevel??0,a="thematic"!==i.dataType,o=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r,useBilinear:a},s):Promise.resolve((0,Y.lD)(e,t,r,a)),l=null!=i.statistics,u=null!=i.histograms,f=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},s):Promise.resolve((0,K.f4)(e)),h=await(0,c.Lx)([o,f]);if(!h[0].value&&h[1].value)throw new n.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=h[0].value,l||(i.statistics=h[1].value?.statistics),u||(i.histograms=h[1].value?.histograms)}async _buildMDimStats(e,t,s){for(let i=0;i<t.variables.length;i++){const r=t.variables[i];if(r.statistics)continue;const a=r.dimensions.map(e=>new W.A({variableName:r.name,dimensionName:e.name,values:[e.values?.[0]??e.extent?.[0]],isSlice:!0})),n=(0,X.NG)(a,t),o=null==n?null:e[n];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},s):(0,K.eH)(o);r.statistics=l.statistics,r.histograms||(r.histograms=l.histograms)}}};(0,i._)([(0,f.MZ)({type:String,json:{write:!0}})],Q.prototype,"datasetFormat",void 0),(0,i._)([(0,f.MZ)()],Q.prototype,"source",void 0),(0,i._)([(0,f.MZ)()],Q.prototype,"url",null),Q=(0,i._)([(0,d.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],Q);const ee=Q;var te=s(77725);let se=class extends P.A{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,s,i)}async _open(e){const{extent:t,pixelBlocks:s,multidimensionalInfo:i,attributeTable:r,bandNames:a}=await this._fetchData(e),{statistics:n,histograms:o}=(0,K.eH)(s[0]),l=a?.map(e=>({BandName:e})),c={DataType:r?"Thematic":i?"Scientific":"Generic",BandProperties:l},u=new ee({source:{extent:t,pixelBlocks:s,attributeTable:r?te.A.fromJSON(r):null,multidimensionalInfo:i,statistics:n,histograms:o,keyProperties:c,isPseudoSpatialReference:!1}});await u.open(),this._inMemoryRaster=u;const f=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",f.slice(0,f.indexOf("."))),this._set("rasterInfo",u.rasterInfo)}async _fetchData(e){const t=this.source??(await this.request(this.url,{signal:e?.signal})).data,s="imagery-tile-layer:open-coverage-json";if("coverage"!==t.type?.toLowerCase()||"grid"!==t.domain?.domainType?.toLowerCase())throw new n.A(s,"Only coverage with Grid domain type is supported");if(!t.ranges)throw new n.A(s,"Missing ranges in the grid coverage data");if(!t.domain.referencing?.length)throw new n.A(s,"Missing domain referencing in the grid coverage data");const i=Object.values(t.ranges);for(let r=0;r<i.length;r++){const{axisNames:e,shape:t,type:a,values:o}=i[r];if(!("ndarray"===a.toLowerCase()&&o?.length&&e?.length&&t?.length))throw new n.A(s,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!z(e[e.length-1])||!V(e[e.length-2]))throw new n.A(s,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function(e){const{width:t,height:s,extent:i,dimensions:r}=U(e),{ranges:a}=e,n=Object.keys(a).sort((e,t)=>e<t?-1:1),o=[];for(let h=0;h<n.length;h++){const e=n[h];r?.length&&o.push({name:e,dimensions:r})}const l=Z(e);o.forEach(e=>l[e.name]&&Object.assign(e,l[e.name]));const c=o.length?{variables:o}:void 0,u=[];for(let h=0;h<n.length;h++){const e=n[h],{values:i,dataType:o,axisNames:l,shape:c}=a[e],f=c.length>2?h*c.slice(0,-2).reduce((e,t)=>e*t):0,p=l.slice(0,-2),d=c.slice(0,-2),m="float"===o?"f32":G(i),y=t*s,g=i.length/y;for(let a=0;a<g;a++){const e=L.A.createEmptyBand(m,y),n=new Uint8Array(y).fill(255);let o=!1;const l=a*y;for(let t=0;t<y;t++){const s=i[l+t];null==s?(n[t]=0,o=!0):e[t]=s}if(0===h||r?.length){const i=new L.A({width:t,height:s,mask:o?n:null,pixels:[e],pixelType:m});i.updateStatistics(),r?.length?u[q(p,d,a)+f]=i:u.push(i)}else{const t=u[a];t.pixels.push(e),o?t.mask&&(t.mask=L.A.combineBandMasks([t.mask,n])):t.mask=o?n:null}}}const f=Object.values(l).find(e=>e.attributeTable)?.attributeTable;return{extent:i,pixelBlocks:u,multidimensionalInfo:c,attributeTable:f,bandNames:c?void 0:n}}(t)}};(0,i._)([(0,f.MZ)({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),(0,i._)([(0,f.MZ)({constructOnly:!0})],se.prototype,"source",void 0),se=(0,i._)([(0,d.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],se);const ie=se;var re=s(18690),ae=s(80963),ne=s(86769),oe=s(29754);function le(e,t){if(!e||!t)return null;const s=[];for(let i=0;i<e.length;i++)s.push(e[i]),s.push(t[i]);return s}function ce(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new E.A({wkid:t});if(e=String(e).trim(),(0,ae.jp)(e))return new E.A({wkt2:e});const s=e.toUpperCase();if(s.startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const i=s.indexOf("VERTCS"),r=s.indexOf("PROJCS"),a=r>-1?r:s.indexOf("GEOGCS");if(-1===a)return null;const n=e.slice(a,e.lastIndexOf("]",i)+1).trim(),o=e.slice(i,e.lastIndexOf("]")).trim();t=ue(n);const l=new E.A(t?{wkid:t}:{wkt:n}),c=ue(o);return c&&(l.vcsWkid=c),l}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(t=ue(e),new E.A(0!==t?{wkid:t}:{wkt:e})):null}function ue(e){const t=e.replaceAll("]","[").replaceAll('"',"").split("[").map(e=>e.trim()).filter(e=>""!==e),s=t[t.length-1].split(","),i=s[0]?.toLowerCase();if(("epsg"===i||"esri"===i)&&e.endsWith('"]]')){const e=Number(s[1]);if(!isNaN(e)&&0!==e)return e}return 0}function fe(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if((0,ne.g7)(e,"SRS")){if(!t.spatialReference){const s=(0,ne.mX)(e);t.spatialReference=ce(s)}}else if((0,ne.g7)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:s,transform:i}=function(e){const t=(0,ne.V6)(e,"GeodataXform"),s=ce((0,ne.v7)(t,"SpatialReference/WKID")||(0,ne.mX)(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:s,transform:null};const i=(0,ne.v7)(t,"PolynomialOrder")??1,r=(0,ne.Ui)(t,"CoeffX/Double"),a=(0,ne.Ui)(t,"CoeffY/Double"),n=(0,ne.Ui)(t,"InverseCoeffX/Double"),o=(0,ne.Ui)(t,"InverseCoeffY/Double"),l=le(r,a),c=le(n,o);return{spatialReference:s,transform:l&&c&&l.length&&c.length?new oe.A({spatialReference:s,polynomialOrder:i,forwardCoefficients:l,inverseCoefficients:c}):null}}(e);t.transform=i,t.spatialReference||(t.spatialReference=s)}else(0,ne.IC)(e,"MDI").forEach(e=>t.metadata[e.getAttribute("key")]=(0,ne.mX)(e));else if((0,ne.g7)(e,"PAMRasterBand")){const s=function(e){const t=(0,ne.v7)(e,"NoDataValue"),s=(0,ne.V6)(e,"Histograms/HistItem"),i=(0,ne.v7)(s,"HistMin"),r=(0,ne.v7)(s,"HistMax"),a=(0,ne.v7)(s,"BucketCount"),n=(0,ne.mX)(s,"HistCounts")?.split("|").map(e=>Number(e));let o,l,c,u;(0,ne.IC)(e,"Metadata/MDI").forEach(e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=t;break;case"STATISTICS_MAXIMUM":l=t;break;case"STATISTICS_MEAN":c=t;break;case"STATISTICS_STDDEV":u=t}});const f=(0,ne.v7)(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:n?.length&&null!=i&&null!=r?{min:i,max:r,size:a||n.length,counts:n}:null,sourceBandIndex:f,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:u}:null}}(e);null!=s.sourceBandIndex&&null==t.rasterBands[s.sourceBandIndex]?t.rasterBands[s.sourceBandIndex]=s:t.rasterBands.push(s)}});const s=t.rasterBands;if(s.length){const e=!!s[0].statistics;t.statistics=e?s.map(e=>e.statistics).filter(re.Ru):null;const i=!!s[0].histogram;t.histograms=i?s.map(e=>e.histogram).filter(re.Ru):null}return t}var he=s(59648);let pe=class extends P.A{fetchRawTile(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,s,i)}async _open(e){const t=await this._fetchData(e);let{spatialReference:s,statistics:i,histograms:r,transform:a}=await this._fetchAuxiliaryData(e);const n=!s;n&&(s=new E.A({wkid:3857})),r?.length&&null==i&&(i=(0,K.Pg)(r));const{width:o,height:l}=t;let c=new D.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:s});const u=a?a.forwardTransform(c):c;let f=!0;if(a){const e=a.forwardCoefficients;f=e&&0===e[1]&&0===e[2],f&&(a=null,c=u)}const h=new ee({source:{extent:u,nativeExtent:c,transform:a,pixelBlocks:[t],statistics:i,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(h.ioConfig.skipMapInfo=!0),await h.open(),h.source=null,this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),s=(0,he.g)(t).toUpperCase();if("JPG"!==s&&"PNG"!==s&&"GIF"!==s&&"BMP"!==s)throw new n.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);const i=s.toLowerCase(),r="gif"===i||"bmp"===i||!(0,p.A)("ios"),a=await this.decodePixelBlock(t,{format:i,useCanvas:r,hasNoZlibMask:!0});if(null==a)throw new n.A("image-aux-raster:open","the data cannot be decoded");return a}async _fetchAuxiliaryData(e){const t=e?.signal,{skipExtensions:s=[],skipMapInfo:i}=this.ioConfig,r=i||s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),a=this.datasetFormat,n="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,o=n&&s.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:t}),l=await(0,c.Lx)([r,o]);if(t?.aborted)throw(0,c.NK)();const u=fe(l[0].value?.data);if(!u.transform){const e=l[1].value?l[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;u.transform=6===e?.length?new oe.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return u}};(0,i._)([(0,f.MZ)({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),pe=(0,i._)([(0,d.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],pe);const de=pe;var me=s(30726),ye=s(90534),ge=s(19247),xe=s(49653),we=s(88235),ve=s(82356),Ie=s(26855),be=s(25213);let Se=class extends P.A{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:r,extent:a}=this.rasterInfo,{transposeInfo:n}=r,o=null!=n&&!!i.transposedVariableName;if(this._slices&&!o&&null==i.sliceId)return null;const l=o?0:r.maximumPyramidLevel-e+this._levelOffset,c=`${this.url}/tile/${l}/${t}/${s}`,u=this._slices?o?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null;let f,h;if(r.isBsqTile){const e=(i.bandIds?.length?i.bandIds:[0,1,2]).map(e=>this.request(c,{query:{...u,bandId:e},responseType:"array-buffer",signal:i.signal})),t=await Promise.all(e),s=t.map(e=>e.data.byteLength).reduce((e,t)=>e+t),r=new Uint8Array(s);h=[];let a=0;for(const{data:i}of t)h.push(a),r.set(new Uint8Array(i),a),a+=i.byteLength;f=r.buffer}else f=(await this.request(c,{query:u,responseType:"array-buffer",signal:i.signal})).data;if(!f)return null;const p=o?n.tileSize:r.tileInfo.size,d=await this.decodePixelBlock(f,{width:p[0],height:p[1],planes:h?.length,offsets:h,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==d)return null;const m=r.blockBoundary[e];if("jpg"!==r.compression||s>m.minCol&&s<m.maxCol&&t>m.minRow&&t<m.maxRow)return d;const{origin:y,blockWidth:g,blockHeight:x}=r,{x:w,y:v}=this.getPyramidPixelSize(e),I=Math.round((a.xmin-y.x)/w)%g,b=Math.round((a.xmax-y.x)/w)%g||g,S=Math.round((y.y-a.ymax)/v)%x,_=Math.round((y.y-a.ymin)/v)%x||x,T=s===m.minCol?I:0,R=t===m.minRow?S:0,A=s===m.maxCol?b:g,C=t===m.maxRow?_:x;return(0,Y.z$)(d,{x:T,y:R},{width:A-T,height:C-R}),d}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let s=0;s<this._slices.length;s++){const e=this._slices[s].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const s=t.find(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName);return!s||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])}))return s}return null}async fetchVariableStatisticsHistograms(e,t){const s=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>e.data?.statistics),i=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>e.data?.histograms),r=await Promise.all([s,i]);return r[0]&&r[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),r[1]?.[0]?.counts?.length||(r[1]=null),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===s)return null;let i=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let a=r-i+this._levelOffset;const n=s.srcLocation;for(;a>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(a,s.row,s.col,t))break}catch{}if(a--,i++,s=this.identifyPixelLocation(n,i,t.datumTransformation),null===s)return null}return-1===a||null==s?null:i}async _open(e){const t=e?.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=s.data;if(this.sourceJSON=i,!i)throw new n.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new n.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=i.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===i.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=i.name?.slice(i.name.indexOf("/")+1)??"";const r=await this._fetchRasterInfo({signal:t});if(null==r)throw new n.A("image-server-raster:open","cannot initialize image service");(0,be.E9)(r,i);const a="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:s,maxScale:i,minLOD:r,maxLOD:a}=t;if(null!=r&&null!=a)return we.A.fromJSON({...e,lods:e.lods.filter(e=>{let{level:t}=e;return null!=t&&t>=r&&t<=a})});if(0!==s&&0!==i){const t=e=>Math.round(1e4*e)/1e4,r=s?t(s):1/0,a=i?t(i):-1/0;return we.A.fromJSON({...e,lods:e.lods.filter(e=>{const s=t(e.scale);return s<=r&&s>=a})})}return we.A.fromJSON(e)}(i.tileInfo,i):we.A.fromJSON(i.tileInfo);(0,me.Lw)(a);const[o,l]=this._computeMinMaxLOD(r,a),{extent:c,pixelSize:u}=r,f=.5/r.width*u.x,h=Math.max(u.x,u.y),{lods:p}=a;("Map"!==this.tileType&&0!==i.maxScale||Math.abs(u.x-u.y)>f||!p.some(e=>Math.abs(e.resolution-h)<f))&&(u.x=u.y=o.resolution,r.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),r.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const d=o.level-l.level,[m,y]=a.size,g=[],x=[];p.forEach((e,t)=>{e.level>=l.level&&e.level<=o.level&&g.push({x:e.resolution,y:e.resolution}),t<p.length-1&&x.push(Math.round(10*e.resolution/p[t+1].resolution)/10)}),g.sort((e,t)=>e.x-t.x);const w=this.computeBlockBoundary(c,m,y,a.origin,g,d),v=g.length>1?g.slice(1):null;let I;i.transposeInfo&&(I={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:r.keyProperties?._yxs.PacketSize??0});const b=x.length<=1||x.length>=3&&x.slice(0,-1).every(e=>e===x[0])?x[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/d))/10;if(r.storageInfo=new xe.A({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:v,pyramidScalingFactor:b,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:d,tileInfo:a,isBsqTile:!!i.bsq,transposeInfo:I,blockBoundary:w}),function(e){const{extent:t,spatialReference:s}=e;t.xmin>-1&&t.xmax>181&&s?.wkid&&s.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Ie.A,e.extent=e.transform.forwardTransform(t))}(r),this._set("rasterInfo",r),i.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:(0,ye.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new ve.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,s=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),i=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=E.A.fromJSON(t.spatialReference||e.spatialReference),a=new ge.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new $.A({width:s,height:i,bandCount:3,extent:D.A.fromJSON(e),spatialReference:r,pixelSize:a,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:s}=e,i=(0,be.Tw)(this.url,this.sourceJSON,{signal:s,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:s}).then(e=>e.data?.slices).catch(()=>null):null,a=await Promise.all([i,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){const{pixelSize:s}=e,i=.5/e.width*s.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map(e=>e.level))),n=t.lodAt(Math.min.apply(null,r.map(e=>e.level))),{tileType:o}=this;if("Map"===o)return this._levelOffset=r[0].level,[a,n];if("Raster"===o)return[r.find(e=>e.resolution===s.x)??a,n];const{minScale:l,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=r.find(e=>Math.abs(e.scale-c)<i),u||(u=r.filter(e=>e.scale>c).sort((e,t)=>e.scale>t.scale?1:-1)[0]??a));let f=n;return l>0&&(f=r.find(e=>Math.abs(e.scale-l)<i)??n,this._levelOffset=f.level-n.level),[u,f]}};(0,i._)([(0,f.MZ)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),(0,i._)([(0,f.MZ)()],Se.prototype,"tileType",void 0),Se=(0,i._)([(0,d.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],Se);const _e=Se;var Te=s(10798);const Re=new Map;Re.set("Int8","s8"),Re.set("UInt8","u8"),Re.set("Int16","s16"),Re.set("UInt16","u16"),Re.set("Int32","s32"),Re.set("UInt32","u32"),Re.set("Float32","f32"),Re.set("Float64","f32"),Re.set("Double64","f32");const Ae=new Map;Ae.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ae.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ae.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ae.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Ce=class extends P.A{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:r,blockHeight:a,blockBoundary:n}=this.rasterInfo.storageInfo,o=n[e];if(!o||o.maxRow<t||o.maxCol<s||o.minRow>t||o.minCol>s)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:f,actualTileHeight:h}=this._getTileLocation(e,t,s);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(r*a);return new L.A({width:r,height:a,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,d=this._getBandSegmentCount(),m=[];let y=0;for(y=0;y<d;y++)p&&!p.includes(y)||m.push(this.request(this._files.data,{range:{from:u[y].from,to:u[y].to},responseType:"array-buffer",signal:i.signal}));const g=await Promise.all(m),x=g.map(e=>e.data.byteLength).reduce((e,t)=>e+t),w=new Uint8Array(x),v=[];let I=0;for(y=0;y<d;y++)v.push(I),w.set(new Uint8Array(g[y].data),I),I+=g[y].data.byteLength;const b=Ae.get(this.rasterInfo.storageInfo.compression).decoderFormat,S=await this.decodePixelBlock(w.buffer,{width:r,height:a,format:b,planes:p?.length||l,offsets:v,pixelType:c});if(null==S)return null;let{noDataValue:_}=this.rasterInfo;if(null!=_&&"lerc"!==b&&!S.mask&&(_=_[0],null!=_)){const e=S.width*S.height,t=new Uint8Array(e);if(Math.abs(_)>1e24)for(y=0;y<e;y++)Math.abs((S.pixels[0][y]-_)/_)>1e-6&&(t[y]=1);else for(y=0;y<e;y++)S.pixels[0][y]!==_&&(t[y]=1);S.mask=t}let T=0,R=0;if(f!==r||h!==a){let e=S.mask;if(e)for(y=0;y<a;y++)if(R=y*r,y<h)for(T=f;T<r;T++)e[R+T]=0;else for(T=0;T<r;T++)e[R+T]=0;else for(e=new Uint8Array(r*a),S.mask=e,y=0;y<h;y++)for(R=y*r,T=0;T<f;T++)e[R+T]=1}return S}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,s=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:i,files:r}=this._parseHeader(s.data),{skipMapInfo:a,skipExtensions:n=[]}=this.ioConfig;if(!n.includes("aux.xml")&&!a){const t=await this._fetchAuxiliaryData(e);null!=t&&(i.statistics=t.statistics??i.statistics,i.histograms=t.histograms,t.histograms&&null==i.statistics&&(i.statistics=(0,K.Pg)(t.histograms)))}a&&this.updateImageSpaceRasterInfo(i),this._set("rasterInfo",i),this._files=r;const o=await this.request(r.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,s,i,r,a,n;if(Te.Z){for(s=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),i=new Uint8Array(r),a=0;a<e.byteLength/4;a++)for(n=0;n<4;n++)i[4*a+n]=s[4*a+3-n];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}(o.data);const{blockWidth:l,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:h}=this.rasterInfo,p=[],d=this._getBandSegmentCount();let m=0,y=-1;for(;m<this._storageIndex.length;){y++;const e=Math.ceil(f/l/u**y)-1,t=Math.ceil(h/c/u**y)-1;m+=(e+1)*(t+1)*d*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}_getBandSegmentCount(){return Ae.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,s){const{blockWidth:i,blockHeight:r,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:n,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,f,h=0,p=0;for(f=0;f<e;f++)p=a**f,c=Math.ceil(n/i/p),u=Math.ceil(o/r/p),h+=c*u;p=a**e,c=Math.ceil(n/i/p),u=Math.ceil(o/r/p),h+=t*c+s,h*=4*l;const d=this._storageIndex.subarray(h,h+4*l);let m=0,y=0;const g=[];for(let x=0;x<l;x++)m=d[4*x]*2**32+d[4*x+1],y=m+d[4*x+2]*2**32+d[4*x+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:s<c-1?i:Math.ceil(n/p)-i*(c-1),actualTileHeight:t<u-1?r:Math.ceil(o/p)-r*(u-1)}}_parseHeader(e){const t=(0,ne.V6)(e,"MRF_META/Raster");if(!t)throw new n.A("mrf:open","not a valid MRF format");const s=(0,ne.V6)(t,"Size"),i=parseInt(s.getAttribute("x"),10),r=parseInt(s.getAttribute("y"),10),a=parseInt(s.getAttribute("c"),10),o=((0,ne.mX)(t,"Compression")||"none").toLowerCase();if(!Ae.has(o))throw new n.A("mrf:open","currently does not support compression "+o);const l=(0,ne.mX)(t,"DataType")||"UInt8",c=Re.get(l);if(null==c)throw new n.A("mrf:open","currently does not support pixel type "+l);const u=(0,ne.V6)(t,"PageSize"),f=parseInt(u.getAttribute("x"),10),h=parseInt(u.getAttribute("y"),10),p=(0,ne.V6)(t,"DataValues");let d,m;if(p&&(m=p.getAttribute("NoData"),null!=m&&(d=m.trim().split(" ").map(e=>parseFloat(e)))),(0,ne.V6)(e,"MRF_META/CachedSource"))throw new n.A("mrf:open","currently does not support MRF referencing other data files");const y=(0,ne.V6)(e,"MRF_META/GeoTags"),g=(0,ne.V6)(y,"BoundingBox");let x,w=!1;if(null!=g){const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),s=parseFloat(g.getAttribute("maxx")),i=parseFloat(g.getAttribute("maxy")),r=(0,ne.mX)(y,"Projection")||"";let a=E.A.WGS84;if("LOCAL_CS[]"!==r)if(r.toLowerCase().startsWith("epsg:")){const e=Number(r.slice(5));isNaN(e)||0===e||(a=new E.A({wkid:e}))}else a=ce(r)??E.A.WGS84;else w=!0,a=new E.A({wkid:3857});x=new D.A(e,t,s,i),x.spatialReference=a}else w=!0,x=new D.A({xmin:-.5,ymin:.5-r,xmax:i-.5,ymax:.5,spatialReference:new E.A({wkid:3857})});const v=(0,ne.V6)(e,"MRF_META/Rsets"),I=parseInt(v?.getAttribute("scale")||"2",10),b=x.spatialReference,S=new xe.A({origin:new ge.A({x:x.xmin,y:x.ymax,spatialReference:b}),blockWidth:f,blockHeight:h,pyramidBlockWidth:f,pyramidBlockHeight:h,compression:o,pyramidScalingFactor:I}),_=new ge.A({x:x.width/i,y:x.height/r,spatialReference:b}),T=new $.A({width:i,height:r,extent:x,isPseudoSpatialReference:w,spatialReference:b,bandCount:a,pixelType:c,pixelSize:_,noDataValue:d,storageInfo:S}),R=(0,ne.mX)(e,"datafile"),A=(0,ne.mX)(e,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:A||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",Ae.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return fe(t)}catch{return null}}};(0,i._)([(0,f.MZ)()],Ce.prototype,"_files",void 0),(0,i._)([(0,f.MZ)()],Ce.prototype,"_storageIndex",void 0),(0,i._)([(0,f.MZ)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),Ce=(0,i._)([(0,d.$)("esri.layers.support.rasterDatasets.MRFRaster")],Ce);const Me=Ce;var Oe=s(50611);function Fe(e){const t=e.fields,s=e.records,i=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",r=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),a=r.map(e=>e.name),n=[];let o=0,l=0;return s.forEach(e=>{const t={};for(t[i]=o++,l=1;l<a.length;l++)t[a[l]]=e[l-1];n.push({attributes:t})}),{displayFieldName:"",fields:r,features:n}}class ke{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),s=3&t.getUint8(0);if(3!==s)return{header:{version:s},recordSet:null};const i=t.getUint32(4,!0),r=t.getUint16(8,!0),a=t.getUint16(10,!0),n={version:s,recordCount:i,headerByteCount:r,recordByteCount:a};let o=32;const l=[],c=[];let u;if(3===s){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,Oe.w)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<i&&e.byteLength-o>a;){const s=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)s.push((0,Oe.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)s.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)s.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const i=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();s.push(new Date(parseInt(i.slice(0,4),10),parseInt(i.slice(4,6),10)-1,parseInt(i.slice(6,8),10)))}o+=t.length}),c.push(s)):o+=a}}return{header:n,fields:l,records:c,recordSet:Fe({fields:l,records:c})}}}var Pe=s(87018),Ne=s(75374);const De=(e,t)=>e.get(t)?.values,Ee=(e,t)=>e.get(t)?.values?.[0];let Be=class extends P.A{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this._chunkSize=10485760,this.datasetFormat="TIFF"}async fetchRawTile(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,s))return null;const r=await this._fetchRawTiffTile(e,t,s,!1,i);if(null!=r&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(e,t,s,!0,i);null!=a&&a.pixels[0]instanceof Uint8Array&&(r.mask=a.pixels[0])}return r}async _open(e){const t=e?e.signal:null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!s)throw new n.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:i,firstIFDPos:r,isBigTiff:a}=(0,Pe.uT)(s),l=[],c={fileChunk:s,posIFD:r,fileOffset:0};await this._readIFDs(l,c,i,a?8:4,t);const{imageInfo:u,rasterInfo:f}=function(e){const t=(0,Pe.uc)(e),{width:s,height:i,tileWidth:r,tileHeight:a,planes:n,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:f,pyramidBlockHeight:h,pyramidResolutions:p,tileBoundary:d,affine:m,metadata:y}=t,g=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let x=ce(g),w=!!t.isPseudoGeographic;null==x&&(w=!0,x=new E.A({wkid:3857}));const v=new D.A({...t.extent,spatialReference:x}),I=new ge.A(v?{x:v.xmin,y:v.ymax,spatialReference:x}:{x:0,y:0}),b=new xe.A({blockWidth:r,blockHeight:a,pyramidBlockWidth:f,pyramidBlockHeight:h,compression:l,origin:I,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:p,blockBoundary:d}),S=new ge.A({x:(v.xmax-v.xmin)/s,y:(v.ymax-v.ymin)/i,spatialReference:x}),_=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let T=null;const R=Ee(e[0],"PHOTOMETRICINTERPRETATION"),A=De(e[0],"COLORMAP");if(R<=3&&A?.length>3&&A.length%3==0){T=[];const e=A.length/3;for(let t=0;t<e;t++)T.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const C=new $.A({width:s,height:i,bandCount:n,pixelType:o,pixelSize:S,storageInfo:b,spatialReference:x,isPseudoSpatialReference:w,keyProperties:_,extent:v,colormap:T,statistics:y?y.statistics:null});if(m?.length&&(C.nativeExtent=new D.A({xmin:-.5,ymin:.5-i,xmax:s-.5,ymax:.5,spatialReference:x}),C.transform=new oe.A({polynomialOrder:1,forwardCoefficients:[m[2]+m[0]/2,m[5]-m[3]/2,m[0],m[3],-m[1],-m[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new ge.A({x:(v.xmax-v.xmin)/s,y:(v.ymax-v.ymin)/i,spatialReference:x}),b.origin.x=-.5,b.origin.y=.5),p){const{x:e,y:t}=C.pixelSize;p.forEach(s=>{s.x*=e,s.y*=t})}return{imageInfo:t,rasterInfo:C}}(l),h=(0,Pe.zS)(l),p=(0,Pe.r9)(l);if(this._headerInfo={littleEndian:i,isBigTiff:a,ifds:l,pyramidIFDs:h,maskIFDs:p,...u},this._set("rasterInfo",f),!u.isSupported)throw new n.A("tiffraster:open","this tiff is not supported: "+u.message);if(!u.tileWidth)throw new n.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");f.isPseudoSpatialReference&&o.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const d=l[0].get("PREDICTOR")?.values?.[0],m=l[0].get("SAMPLEFORMAT")?.values?.[0];if(3===m&&2===d)throw new n.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:y,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!y){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,K.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const s=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new ge.A({x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=s}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,f)}g.includes("vat.dbf")||1!==f.bandCount||"u8"!==f.pixelType||y||(f.attributeTable=await this._fetchAuxiliaryTable(e),null!=f.attributeTable&&(f.keyProperties.DataType="thematic")),y&&this.updateImageSpaceRasterInfo(f),this.updateTileInfo()}async _validateOrFetchHeaderBuffer(e,t){let{fileChunk:s,fileOffset:i,posIFD:r}=e;return(r+8>=s.byteLength||r<0)&&(i=r+i,s=(await this.request(this.url,{range:{from:i,to:i+this._bufferSize},responseType:"array-buffer",signal:t})).data,r=0),{fileChunk:s,fileOffset:i,posIFD:r}}async _readIFDs(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,r=arguments.length>4?arguments[4]:void 0;if(!t.posIFD)return null;t=await this._validateOrFetchHeaderBuffer(t,r);const a=await this._readIFD(t,s,Ne.NB,i,r);if(!a?.ifd)throw new n.A("tiffraster:open","cannot parse tiff header. failed to open url "+this.url);if(e.push(a.ifd),!a.nextIFD)return null;t.posIFD=a.nextIFD-t.fileOffset,await this._readIFDs(e,t,s,i,r)}async _readIFD(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ne.NB,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,r=arguments.length>4?arguments[4]:void 0,{fileChunk:a,posIFD:n,fileOffset:o}=e;if(!e.fileChunk)return null;const l=(0,Pe.JM)(a,t,n,o,s,i);if(l.success){const e=[];if(l.ifd?.forEach(t=>{t.values||e.push(t)}),e.length>0&&await this._fillOffsets(e,t,l.nextIFD,r),l.ifd?.has("GEOKEYDIRECTORY")){const e=l.ifd.get("GEOKEYDIRECTORY"),s=e?.values;if(s&&s.length>4){const i=s[0]+"."+s[1]+"."+s[2];n=e.valueOffset+6-o;const l=await this._validateOrFetchHeaderBuffer({fileChunk:a,posIFD:n,fileOffset:o},r),c=await this._readIFD(l,t,Ne.YC,2,r);e.data=c?.ifd,e.data&&e.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[i]})}}return l}return l.requiredBufferSize?(a=(await this.request(this.url,{range:{from:o,to:o+n+l.requiredBufferSize+8},responseType:"array-buffer",signal:r})).data,a.byteLength<n+l.requiredBufferSize?null:(e.fileChunk=a,e.fileOffset=o,this._readIFD(e,t,s,i,r))):null}async _fillOffsets(e,t,s,i){const r=e.filter(e=>null!=e.offlineOffsetSize);if(0===r.length)return;const a=r.map(e=>e.offlineOffsetSize),n=Math.min.apply(null,a.map(e=>e[0])),o=Math.max.apply(null,a.map(e=>e[0]+e[1]));let l=1===a.length||o-n<=this._bufferSize;if(!l&&a.length>1&&(a.sort((e,t)=>e[0]-t[0]),l=a.reduce((e,t)=>e===t[0]?t[0]+t[1]:0,a[0][0])===o),l){const e=await this._fetchOffsets(n,Math.max(o,n+this._bufferSize),i);return void r.forEach(s=>(0,Pe.Cr)(e,t,s,n))}const c=r.map(async e=>{const s=e.offlineOffsetSize,r=await this._fetchOffsets(s[0],s[1]+s[0],i);(0,Pe.Cr)(r,t,e,s[0])});await Promise.all(c)}async _fetchOffsets(e,t,s){const i=[],r=this._chunkSize,a=Math.ceil((t-e)/r);let n=e;for(let c=0;c<a;c++)i.push(this.request(this.url,{range:{from:n,to:c===a-1?t:n+r-1},responseType:"array-buffer",signal:s})),n+=r;const o=await Promise.all(i);if(1===a)return o[0].data;const l=new Uint8Array(t-e+1);for(let c=0;c<a;c++)l.set(new Uint8Array(o[c].data),c*r);return l.buffer}async _fetchRawTiffTile(e,t,s,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const a=this._getTileLocation(e,t,s,i);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:c}=a,u=n.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal})),f=await Promise.all(u),h=f.map(e=>e.data.byteLength).reduce((e,t)=>e+t),p=1===f.length?f[0].data:new ArrayBuffer(h),d=[0],m=[0];if(f.length>1){const e=new Uint8Array(p);for(let t=0,s=0;t<f.length;t++){const i=f[t].data;e.set(new Uint8Array(i),s),d[t]=s,s+=i.byteLength,m[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(p,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:d,sizes:m},width:y,height:g,planes:null,pixelType:null});if(null==x)return null;let w,v,I;if(o!==y||l!==g){let e=x.mask;if(e)for(w=0;w<g;w++)if(I=w*y,w<l)for(v=o;v<y;v++)e[I+v]=0;else for(v=0;v<y;v++)e[I+v]=0;else for(e=new Uint8Array(y*g),x.mask=e,w=0;w<l;w++)for(I=w*y,v=0;v<o;v++)e[I+v]=1}return x}_getTileLocation(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:r,blockBoundary:a}=this.rasterInfo.storageInfo,n=0===e?0:e-(r-1),{_headerInfo:o}=this;if(!o)return null;const l=i?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!l)return null;const c=(0,Pe.XO)(l,o),u=De(l,"TILEOFFSETS");if(void 0===u)return null;const f=De(l,"TILEBYTECOUNTS"),{minRow:h,minCol:p,maxRow:d,maxCol:m}=a[n];if(t>d||s>m||t<h||s<p)return null;const y=Ee(l,"IMAGEWIDTH"),g=Ee(l,"IMAGELENGTH"),x=Ee(l,"TILEWIDTH"),w=Ee(l,"TILELENGTH"),v=[];if(c){const{bandCount:e}=this.rasterInfo;for(let i=0;i<e;i++){const e=i*(d+1)*(m+1)+t*(m+1)+s;v[i]={from:u[e],to:u[e]+f[e]-1}}}else{const e=t*(m+1)+s;v.push({from:u[e],to:u[e]+f[e]-1})}for(let I=0;I<v.length;I++)if(null==v[I].from||!v[I].to||v[I].to<0)return null;return{ranges:v,ifd:l,actualTileWidth:s===m&&y%x||x,actualTileHeight:t===d&&g%w||w}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return fe(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),s=ke.parse(t);return s?.recordSet?te.A.fromJSON(s.recordSet):null}catch{return null}}};(0,i._)([(0,f.MZ)()],Be.prototype,"_files",void 0),(0,i._)([(0,f.MZ)()],Be.prototype,"_headerInfo",void 0),(0,i._)([(0,f.MZ)()],Be.prototype,"_bufferSize",void 0),(0,i._)([(0,f.MZ)()],Be.prototype,"_chunkSize",void 0),(0,i._)([(0,f.MZ)({type:String,json:{write:!0}})],Be.prototype,"datasetFormat",void 0),Be=(0,i._)([(0,d.$)("esri.layers.support.rasterDatasets.TIFFRaster")],Be);const Le=Be,Je=new Map;Je.set("MRF",{desc:"Meta Raster Format",constructor:Me}),Je.set("TIFF",{desc:"GeoTIFF",constructor:Le}),Je.set("RasterTileServer",{desc:"Raster Tile Server",constructor:_e}),Je.set("JPG",{desc:"JPG Raster Format",constructor:de}),Je.set("PNG",{desc:"PNG Raster Format",constructor:de}),Je.set("GIF",{desc:"GIF Raster Format",constructor:de}),Je.set("BMP",{desc:"BMP Raster Format",constructor:de}),Je.set("CovJSON",{desc:"COVJSON Raster Format",constructor:ie}),Je.set("MEMORY",{desc:"In Memory Raster Format",constructor:ee});class ze{static get supportedFormats(){const e=new Set;return Je.forEach((t,s)=>e.add(s)),e}static async open(e){const{url:t,ioConfig:s,source:i,sourceJSON:r}=e;let a=e.datasetFormat??s?.datasetFormat;null==a&&(t.includes(".")?a=t.slice(t.lastIndexOf(".")+1).toUpperCase():"coverage"===i?.type?.toLowerCase()?a="CovJSON":i?.extent&&i.pixelblocks&&(a="MEMORY")),"OVR"===a||"TIF"===a?a="TIFF":"JPG"===a||"JPEG"===a||"JFIF"===a?a="JPG":"COVJSON"===a&&(a="CovJSON"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(a="RasterTileServer");const o={url:t,source:i,sourceJSON:r,datasetFormat:a,ioConfig:s??{bandIds:null,sampling:null}};if(Object.keys(o).forEach(e=>{null==o[e]&&delete o[e]}),a){if(!this.supportedFormats.has(a))throw new n.A("rasterfactory:open","not a supported format "+a);if("CRF"===a)throw new n.A("rasterfactory:open",`cannot open raster: ${t}`);const s=new(0,Je.get(a).constructor)(o);return await s.open({signal:e.signal}),s}const l=Array.from(Je.keys()).filter(e=>"CovJSON"!==e&&"Memory"!==e);let c=0;const u=()=>{if(a=l[c++],!a)return null;if("CRF"===a)return null;const t=new(0,Je.get(a).constructor)(o);return t.open({signal:e.signal}).then(()=>t).catch(()=>u())};return u()}static register(e,t,s){Je.has(e.toUpperCase())||Je.set(e.toUpperCase(),{desc:t,constructor:s})}}var Ve=s(81633),Ue=s(30973),je=s(61701);let He=class extends((0,g.dM)((0,T.j)((0,v.q)((0,I.A)((0,S.H)((0,x.d)((0,w.o)((0,b.G)((0,R.e)((0,y.b)((0,_.J)((0,l.P)(a.A.ClonableMixin(m.A)))))))))))))){constructor(){super(...arguments),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,c.sg)(async(e,t,i)=>{const{save:r,saveAs:a}=await s.e(20964).then(s.bind(s,20964));switch(e){case je.X.SAVE:return r(this,t);case je.X.SAVE_AS:return a(this,i,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.QP).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[(0,M.rZ)("Pixel Value"),(0,M.dy)("Raw Pixel Value")],t=this.raster?.rasterInfo??this.serviceRasterInfo,s=t?.attributeTable;if(s){const t=(0,M.jC)(s);e.push(...t)}const i=t?.dataType,r=t?.multidimensionalInfo;if(("vector-magdir"===i||"vector-uv"===i)&&null!=r){const t=r.variables[0].unit?.trim(),s=(0,M.DV)(t),i=(0,M.y6)();e.push(s,i)}if(r){const t=(0,M.AL)(r);e.push(...t)}return e}createPopupTemplate(e){const{rasterFields:t}=this,s=e?.visibleFieldNames??new Set(t.map(e=>{let{name:t}=e;return t}).filter(e=>e!==M.F_.rawServicePixelValue)),i=(0,Ue.tn)({fields:t,title:this.title},{...e,visibleFieldNames:s}),{rasterInfo:r}=this.raster;return i?.fieldInfos&&r&&(0,M.h4)(i.fieldInfos,r),i}async generateRasterInfo(e,t){if(e=(0,h.PZ)(O.A,e),await this.load(),!e||"none"===e.functionName?.toLowerCase())return this.serviceRasterInfo;try{const{rasterInfo:s}=await this._openFunctionRaster(e,t);return s}catch(ke){if(ke instanceof n.A)throw ke;throw new n.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(je.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(je.X.SAVE_AS,t,e)}write(e,t){const s=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===s.datasetFormat&&("Raster"===s.tileType||"Map"===s.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new n.A("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)await this._openFromRaster(this.raster,e),t=(0,F.q)(this.raster),!t&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:s,source:i}=this;if(!t&&!i)throw new n.A("imagery-tile-layer:open","missing url or source parameter");i?await this._openFromSource(i,e):s?await this._openFromUrlWithRasterFunction(t,s,e):await this._openFromUrl(t,e)}const s=this.raster.rasterInfo;if(!s)throw new n.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",t?s:this._primaryRasters[0].rasterInfo),this._set("spatialReference",s.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,u.wB)(()=>this.customParameters,e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)}))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters=(0,F.p)(e),this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,s){const i=[e];t&&(0,Ve.UD)(t.toJSON(),i);const r=await Promise.all(i.map(e=>ze.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:s}))),a=r.findIndex(e=>null==e);if(a>-1)throw new n.A("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);return this._primaryRasters=r,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const s=await ze.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==s)throw new n.A("imagery-tile-layer:open",`cannot open raster: ${e}`);this._primaryRasters=[s],this.raster=s}async _openFromSource(e,t){const s="the tiled imagery data source is not supported",i="coverage"===e.type?.toLowerCase()?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!i)throw new n.A("imagery-tile-layer:open",s);"MEMORY"===i&&(e={...e,pixelBlock:void 0,pixelBlocks:[e.pixelBlock]});const r=await ze.open({url:"",source:e,datasetFormat:i,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==r)throw new n.A("imagery-tile-layer:open",s);this._primaryRasters=[r],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=r}async _openFunctionRaster(e,t){const s={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(e=>s[e.url]=e);const i=(0,Ve.vt)(e.functionDefinition?.toJSON()??e.toJSON(),s),r=new k.A({rasterFunction:i});return await r.open(t),r}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(ke){ke instanceof n.A&&o.A.getLogger(this).error("imagery-tile-layer:open",ke.message),o.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,i._)([(0,f.MZ)({clonable:!1})],He.prototype,"_primaryRasters",void 0),(0,i._)([(0,f.MZ)(A.fV)],He.prototype,"legendEnabled",void 0),(0,i._)([(0,f.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],He.prototype,"isReference",void 0),(0,i._)([(0,f.MZ)({type:["show","hide"]})],He.prototype,"listMode",void 0),(0,i._)([(0,f.MZ)({json:{read:!0,write:!0}})],He.prototype,"blendMode",void 0),(0,i._)([(0,f.MZ)({type:O.A,json:{name:"renderingRule",write:!0}})],He.prototype,"rasterFunction",void 0),(0,i._)([(0,f.MZ)()],He.prototype,"sourceJSON",void 0),(0,i._)([(0,f.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],He.prototype,"version",void 0),(0,i._)([(0,f.MZ)({readOnly:!0,json:{read:!1}})],He.prototype,"type",void 0),(0,i._)([(0,f.MZ)({type:["ArcGISTiledImageServiceLayer"]})],He.prototype,"operationalLayerType",void 0),(0,i._)([(0,f.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,s){t[s]=!e}}}})],He.prototype,"popupEnabled",void 0),(0,i._)([(0,f.MZ)({type:r.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],He.prototype,"popupTemplate",void 0),(0,i._)([(0,f.MZ)({readOnly:!0})],He.prototype,"defaultPopupTemplate",null),(0,i._)([(0,f.MZ)({readOnly:!0,type:[C.A]})],He.prototype,"fields",void 0),(0,i._)([(0,f.MZ)({readOnly:!0,type:[C.A]})],He.prototype,"rasterFields",null),(0,i._)([(0,f.MZ)({constructOnly:!0})],He.prototype,"source",void 0),He=(0,i._)([(0,d.$)("esri.layers.ImageryTileLayer")],He);const Ze=He},75116:(e,t,s)=>{s.d(t,{A:()=>o});var i=s(35143),r=s(42553),a=s(46053),n=(s(81806),s(76460),s(47249),s(85842));let o=class extends r.A{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,i._)([(0,a.MZ)()],o.prototype,"affectsPixelSize",null),(0,i._)([(0,a.MZ)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,i._)([(0,n.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o)}}]);
//# sourceMappingURL=49237.f6ab2cb2.chunk.js.map