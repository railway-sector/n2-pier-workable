"use strict";(self.webpackChunkn2_pier_workable=self.webpackChunkn2_pier_workable||[]).push([[58619,68707],{68707:(e,t,s)=>{s.d(t,{G:()=>i,S:()=>r});class i{*[Symbol.iterator](){let e=this.next();for(;e;)yield e,e=this.next()}}class r extends i{constructor(e){super(),this.m_iGeom=-1,this.m_aGeoms=e?e.slice():[]}next(){if(this.m_iGeom<this.m_aGeoms.length-1){const e=this.m_aGeoms[++this.m_iGeom];return this.m_aGeoms[this.m_iGeom]=null,e}return null}tock(){return!1}getGeometryID(){return this.m_iGeom}getRank(){return 1}}},74014:(e,t,s)=>{s.d(t,{G:()=>r});var i=s(33219);class r extends i.L{constructor(e){super(),this._value=e}resize(e){}read(e,t){return this._value}readWithDefault(e,t,s){return this._value}hasArcadeDependency(e){return!1}}},91969:(e,t,s)=>{s.d(t,{o:()=>ye});var i=s(32743),r=s(76931),n=s(84735),a=s(77555),o=s(28808),c=s(33443),l=s(5095),h=s(83936),u=s(35870);function d(e){let{pixelDimensions:t,texelDimensions:s,baseSize:i,referenceSize:n,strokeWidth:a,sizeRatio:o}=e;if(t||(t=e.sprite.sdf?[0,0]:[e.sprite.width,e.sprite.height]),s||(s=e.sprite.sdf?[0,0]:t),null!=e.patternHeight){const s=e.patternHeight/t[1];t[1]*=s,t[0]*=s}-1===i&&(i=t[1]),i=(0,r.Lz)(i),n=(0,r.Lz)(n),a=(0,r.Lz)(a);const c=(e.sprite.sdfDecodeCoeff??1)*o;return{...e,pixelDimensions:t,texelDimensions:s,baseSize:i,referenceSize:n,strokeWidth:a,sdfDecodeCoeff:c}}var m=s(64849),p=s(90113);class f extends h.${get vertexSpec(){return{createComputedParams:d,optionalAttributes:{zoomRange:u.jo,value1Position2Value2:u.Z6,lineLength:u.bU},attributes:{id:u.id,bitset:u.Q5,pos:u.n1,offset:u.cY.marker,uv:u.uv.marker,animationPointerAndBaseSizeAndReferenceSize:u.GE,sizing:u.ve,angle:u.g7}}}_write(e,t){const s=this.evaluatedMeshParams.sprite,{textureBinding:i}=s;e.recordStart(this.instanceId,this.attributeLayout,i);const r=t.getDisplayId();if(this.shift&&"esriGeometryPolyline"===t.geometryType)this._writeParticles(e,t);else if(null!=this.evaluatedMeshParams.placement)this._writePlacedMarkers(e,t);else if("esriGeometryPolygon"===t.geometryType){const s=t.readCentroidForDisplay();if(!s)return;const[i,n]=s.coords;this._writeQuad(e,r,i,n)}else if("esriGeometryPoint"===t.geometryType){const s=t.readXForDisplay(),i=t.readYForDisplay();this._writeQuad(e,r,s,i)}else{const s=t.readGeometryForDisplay();s&&s.forEachVertex((t,s)=>{this._writeQuad(e,r,t,s)})}e.recordEnd()}_writePlacedMarkers(e,t){const s=n.z.fromFeatureSetReaderCIM(t)?.clone();if(!s)return;const i=c.l.getPlacement(s,-1,this.evaluatedMeshParams.placement,(0,r.Lz)(1),e.id,(0,m.z)());if(!i)return;const o=t.getDisplayId();let l=i.next(),h=null;for(;null!=l;){const t=l.tx,s=-l.ty;if(Math.abs(t)>a.$u||Math.abs(s)>a.$u){l=i.next();continue}const r=-l.getAngle();e.recordBounds(t,s,64,64),this.shift?h&&this._writeQuad(e,o,h[0],h[1],void 0,r):this._writeQuad(e,o,t,s,void 0,r),h=[t,s],l=i.next()}}_writeParticles(e,t){const s=t.getDisplayId(),i=t.readGeometryForDisplay();if(!i)return;const r=[];i.forEachVertex((e,t)=>{r.push([e,t])});const n=function(e){const t=[];let s=0;for(let i=1;i<e.length;i++){const r=e[i-1],n=e[i],a=n[0]-r[0],o=n[1]-r[1],c=Math.sqrt(a*a+o*o),l=a/c,h=o/c;t.push({a:{position:r,distance:s,direction:[l,h]},b:{position:n,distance:s+c,direction:[l,h]}}),s+=c}return t}(r);let a=0;for(let o=1;o<r.length;o++){const e=r[o][0]-r[o-1][0],t=r[o][1]-r[o-1][1],s=Math.sqrt(e*e+t*t);a+=s}const c=t=>{for(const i of n){const{a:r,b:n}=i;this._writeQuad(e,s,r.position[0],r.position[1],[r.distance-t,n.position[0],n.position[1],n.distance-t],this.evaluatedMeshParams.angleToLine?Math.atan2(r.direction[1],r.direction[0]):0,a,!0)}},{placement:l}=this.evaluatedMeshParams;if(!l||"placementTemplate"in l||"CIMMarkerPlacementOnVertices"===l.type){let e;if(l&&"CIMMarkerPlacementOnVertices"!==l.type)e=l.placementTemplate;else{e=[0];for(const t of n){const{a:s,b:i}=t,r=s.position[0]-i.position[0],n=s.position[1]-i.position[1],a=Math.sqrt(r*r+n*n);e.push(a)}}let t=-1*a;for(;t<2*a;)for(const s of e)t+=s,c(t)}else"CIMMarkerPlacementAtExtremities"===l.type?l.extremityPlacement===o.$2.JustBegin?c(1):l.extremityPlacement===o.$2.JustEnd?(c(a-1),c(-1)):l.extremityPlacement===o.$2.Both&&(c(1),c(a-1)):"CIMMarkerPlacementOnLine"===l.type&&c(a/2)}_writeQuad(e,t,s,i,r){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const c=this.evaluatedMeshParams.sprite,{rect:h}=c,u=h.x+l.hM,d=h.y+l.hM,m=h.x+h.width-l.hM,f=h.y+h.height-l.hM,_=e.vertexCount();o||e.recordBounds(s,i,64,64);const y={texXmin:u,texYmin:d,texXmax:m,texYmax:f,value1Position2Value2:r,angle:n/p.rp,lineLength:a};for(let l=0;l<4;l++)this._writeVertex(e,t,s,i,y);e.indexEnsureSize(6),e.indexWrite(_),e.indexWrite(_+1),e.indexWrite(_+2),e.indexWrite(_+1),e.indexWrite(_+3),e.indexWrite(_+2)}}class _ extends f{constructor(){super(...arguments),this.shift=!1}}class y extends f{constructor(){super(...arguments),this.shift=!0}}var g=s(27307),v=s(35797),x=s(28736),P=s(64346);class M extends h.${_write(e,t,s){const i=s??n.z.fromFeatureSetReaderCIM(t);if(!i)return;const r=this.evaluatedMeshParams.sprite,{textureBinding:a}=r;e.recordStart(this.instanceId,this.attributeLayout,a);const o=t.getDisplayId();this._writePoly(e,o,i.asOptimized()),e.recordEnd()}}class b extends M{constructor(){super(...arguments),this.vertexSpec={createComputedParams:d,attributes:{id:u.id,bitset:u.Q5,pos:u.n1,offset:u.cY.fill,tlbr:u.Tx,animationPointerAndBaseSizeAndReferenceSize:u.GE,sizing:u.ve},optionalAttributes:{zoomRange:u.jo,value1Position2Value2:u.k3,lineLength:u.Sy}}}_writePoly(e,t,s){const i=[];if(!(0,v.lO)(i,s))return;const r=e.vertexCount();s.forEachVertex((s,i)=>{this._writeVertex(e,t,s,i)}),e.indexEnsureSize(i.length);for(const n of i)e.indexWrite(r+n)}}class w{constructor(){this.id=0,this.bitset=0,this.indexCount=0,this.vertexCount=0,this.vertexFrom=0,this.vertexBounds=0,this.pathLength=0}}class I extends M{constructor(){super(...arguments),this.vertexSpec={createComputedParams:d,attributes:{id:u.id,bitset:u.Q5,pos:u.n1,offset:u.cY.line,tlbr:u.Tx,animationPointerAndBaseSizeAndReferenceSize:u.GE,sizing:u.ve,accumulatedDistance:u.YE,normal:u.qb,segmentDirection:u.zK},optionalAttributes:{zoomRange:u.jo,value1Position2Value2:u.k3,lineLength:u.bU}},this._tessParams=new P.sp,this._currentWrite=new w,this._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0,wrapDistance:65535,textured:!1},this._lineLength=0,this._lineTessellator=new g.i((e,t,s,i,r,n,a,o,c,l,h)=>this._writeTesselatedVertex(e,t,s,i,r,n,a,o,c,l,h,this._lineLength),this._writeTriangle.bind(this),!1)}_writePoly(e,t,s){const i=(0,v.uS)(n.z.fromOptimized(s,"esriGeometryPolyline"),64);if(null==i)return;const{_currentWrite:a,_tessellationOptions:c}=this,{baseSize:l,capType:h,joinType:u,miterLimit:d}=this.evaluatedMeshParams,m=(0,r.Lz)(.5*l);c.halfWidth=m,c.capType=(0,x.ue)(h||o.uT.Round),c.joinType=(0,x.qE)(u||o.wd.Round),c.miterLimit=d||2,a.out=e,a.id=t,a.vertexCount=0,a.indexCount=0,a.vertexFrom=e.vertexCount(),a.vertexBounds=1;for(const{line:r,start:n,pathLength:o}of i){c.initialDistance=n%65535,a.pathLength=o,this._lineLength=0;for(let e=1;e<r.length;e++){const t=r[e].x-r[e-1].x,s=r[e].y-r[e-1].y;this._lineLength+=Math.sqrt(t*t+s*s)}this._lineTessellator.tessellate(r,c,false)}}_writeTesselatedVertex(e,t,s,i,r,n,a,o,c,l,h,u){const{out:d,id:m,vertexBounds:p,pathLength:f}=this._currentWrite;return this.hasEffects&&d.recordBounds(e,t,p,p),this._tessParams.extrusionOffsetX=a,this._tessParams.extrusionOffsetY=o,this._tessParams.normalX=c,this._tessParams.normalY=l,this._tessParams.directionX=r,this._tessParams.directionY=n,this._tessParams.distance=h,this._tessParams.pathLength=f,this._tessParams.lineLength=u,this._writeVertex(d,m,e,t,this._tessParams),this._currentWrite.vertexFrom+this._currentWrite.vertexCount++}_writeTriangle(e,t,s){const{out:i}=this._currentWrite;i.indexEnsureSize(3),i.indexWrite(e),i.indexWrite(t),i.indexWrite(s),this._currentWrite.indexCount+=3}}var z=s(81320),L=s(13308),A=s(33346),S=s(13720),D=s(88075),k=s(38550),E=s(9410),G=s(57156),R=s(98112),T=s(87663),C=s(88685),B=s(94967),W=s(98006),O=s(19555),F=s(59422),Z=s(72745),N=s(98618),V=s(1484),j=s(19358),$=s(19385),Q=s(5685),Y=s(81615);const q=(0,T.Bj)(e=>{let t=0;if(0===e)return 1/0;for(;!(e%2);)t++,e/=2;return t});class X extends Y.G8{constructor(){super(...arguments),this._zoomLevel=0}_write(e,t,s,i){if(this._zoomLevel=i||0,null!=s)throw new Error("InternalError: EffectGeometry not support for LabelMeshWriter");switch(t.geometryType){case"esriGeometryPoint":{const s=t.readXForDisplay(),i=t.readYForDisplay();this._writePoint(e,s,i,0,t);break}case"esriGeometryEnvelope":case"esriGeometryPolygon":{const s=t.readCentroidForDisplay();if(!s)return;const[i,r]=s.coords;this._writePoint(e,i,r,0,t);break}case"esriGeometryMultipoint":{let s=0;const i=n.z.fromFeatureSetReader(t);if(i?.nextPath())for(;i.nextPoint();)this._writePoint(e,i.x,i.y,s++,t);break}case"esriGeometryPolyline":this._writeLines(e,t)}}_getMetricDir(){const{horizontalAlignment:e,verticalAlignment:t}=this.evaluatedMeshParams;return["center"===e?0:"right"===e?-1:1,"middle"===t?0:"bottom"===t?-1:1]}_createLineLabelMetric(e,t,s,i,r,n){const[a,o]=this._getMetricDir(),c=this.evaluatedMeshParams.scaleInfo?.maxScale??0,l=this.evaluatedMeshParams.scaleInfo?.minScale??0,h=this.evaluatedMeshParams.labelClassId;return new $.f(e,h,t,s,i,r,a,o,c,l,n)}_writePoint(e,t,s,i,r){if(t<0||t>l.CQ||s<0||s>l.CQ)return;const n=this._getShaping();if(!n)return;const a=r.getDisplayId(),o=this.evaluatedMeshParams.labelClassId,c=function(e,t){return(0,C.Wm)(`${e}${t}`)}(r.getObjectId(),i),h=function(e,t,s){return(0,C.Wm)(`${e}${t}${s}`)}(r.getObjectId(),o,i),[u,d]=this._getMetricDir(),m=this.evaluatedMeshParams.scaleInfo?.maxScale??0,p=this.evaluatedMeshParams.scaleInfo?.minScale??0,f=this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0};e.metricStart(new $.f(a,o,c,h,t,s,u,d,m,p,f)),this._writeGlyphs(e,a,t,s,n,0,f,void 0,!1),e.metricBoxWrite(n.boundsT),e.metricEnd()}_getPointReferenceBounds(){if(!this._references)return null;for(const e of this._references){const t=e.getBoundsInfo();if(t)return t}return null}_writeLines(e,t){const{scaleInfo:s,verticalAlignment:i}=this.evaluatedMeshParams,r=this.evaluatedMeshParams.repeatLabelDistance||128,n=this._getShaping("middle");if(!n)return;const a=(e,t,s,i)=>this._placeSubdivGlyphs(e,t,s,i),o=(n.bounds.width+r)/2;this._current={out:e,id:t.getDisplayId(),objId:t.getObjectId(),shaping:n,zoomRange:(0,x.My)(s,this.getTileInfo()),referenceBounds:this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0},offsetDirection:null,pathIndex:0},this._verticalPlacement="bottom"===i?"above":"top"===i?"below":null,this._verticalPlacement?this._writeAboveAndBelowAlong(t,a,o):this._writeCenterAlong(t,a,o)}_writeAboveAndBelowAlong(e,t,s){const{repeatLabel:i}=this.evaluatedMeshParams,{shaping:r}=this._current,n=r.bounds.halfHeight,a=e.readGeometryForDisplay();if(!a)return;const o=new V.A;(0,N.kz)(o,a,!1,!1,"esriGeometryPolyline",1);const c=J(new V.A,o,n),l=J(new V.A,o,-n),h=(0,N.zv)(l,"esriGeometryPolyline",!1,!1),u=(0,N.zv)(c,"esriGeometryPolyline",!1,!1),d=(0,Q.Zy)(u.paths,r.bounds.width),m=(0,Q.Zy)(h.paths,r.bounds.width);this._current.offsetDirection="above";for(let p=0;p<d.length;p++)this._current.pathIndex=p,(0,Q.Nd)(d[p],s,t,!!i);this._current.offsetDirection="below";for(let p=0;p<m.length;p++)this._current.pathIndex=p,(0,Q.Nd)(m[p],s,t,!!i)}_writeCenterAlong(e,t,s){const{repeatLabel:i}=this.evaluatedMeshParams,{shaping:r}=this._current,n=(0,Q.Zy)(e.readLegacyGeometryForDisplay().paths,r.bounds.width);for(let a=0;a<n.length;a++)this._current.pathIndex=a,(0,Q.Nd)(n[a],s,t,!!i)}_placeSubdivGlyphs(e,t,s,i){const{allowOverrun:r,labelPosition:n,repeatLabelDistance:a}=this.evaluatedMeshParams,o=this._current.zoomRange[0],c=q(t),l=this._current.shaping.bounds.width/2,h=Math.sqrt(a||128)/2,u=Math.min(s,i-s),d=this._current.shaping.isMultiline?Y.GJ:Math.log2(u/(h+l/2)),m=0===t?d:Math.min(c,d),p=Math.max(o,this._zoomLevel+1-m),f=this._zoomLevel-p,_=this._current.shaping.bounds.width/2*2**f,y=function(e,t,s,i){return(0,C.Wm)(`${e}${t}${s*2**(Y.GJ-i)}`)}(this._current.objId,this._current.pathIndex,t,this._zoomLevel),g=function(e,t,s,i,r){return(0,C.Wm)(`${e}${r}${t}${s*2**(Y.GJ-i)}`)}(this._current.objId,this._current.pathIndex,t,this._zoomLevel,this.evaluatedMeshParams.labelClassId);this._current.shaping.isMultiline?0===t&&this._placeStraight(e,p,y,g):r&&f<0?this._placeStraightAlong(e,o,y,g):"parallel"===n?this._placeStraightAlong(e,p,y,g):"curved"===n&&this._placeCurved(e,p,_,y,g)}_placeStraight(e,t,s,i){const{out:r,id:n,shaping:a,referenceBounds:o}=this._current,{x:c,y:l}=e;r.metricStart(this._createLineLabelMetric(n,s,i,c,l)),r.metricBoxWrite(a.boundsT);const h=e.angle*(180/Math.PI)%360,u=(e.angle*(180/Math.PI)+180)%360,d={clipAngle:h,mapAligned:!0,isLineLabel:!0,minZoom:t};this._writeGlyphs(r,n,c,l,a,0,o,d,!1);const m={clipAngle:u,mapAligned:!0,isLineLabel:!0,minZoom:t};this._writeGlyphs(r,n,c,l,a,0,o,m,!1),r.metricEnd()}_placeCurved(e,t,s,i,r){const{out:n,id:a}=this._current;n.metricStart(this._createLineLabelMetric(a,i,r,e.x,e.y));const o=e.clone(),c=e.angle*(180/Math.PI)%360,l=(e.angle*(180/Math.PI)+180)%360;this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||(this._placeFirst(o,t,1,c),this._placeBack(e,o,t,s,1,c),this._placeForward(e,o,t,s,1,c)),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||(this._placeFirst(o,t,0,l),this._placeBack(e,o,t,s,0,l),this._placeForward(e,o,t,s,0,l)),n.metricEnd()}_placeStraightAlong(e,t,s,i){const{out:n,id:a,shaping:o,zoomRange:c,referenceBounds:l}=this._current,{boxBorderLineColor:h,boxBackgroundColor:u}=this.evaluatedMeshParams,d=e.clone(),m=e.angle*(180/Math.PI)%360,p=(e.angle*(180/Math.PI)+180)%360,f=o.glyphs.length>0&&!(!h&&!u);if(n.metricStart(this._createLineLabelMetric(a,s,i,e.x,e.y)),f){const s=Math.max(t,c[0],0),i=Math.min(Y.GJ,c[1]),h=(0,B.$0)((0,W.vt)(),-e.angle),u={minZoom:s,maxZoom:i,clipAngle:m,mapAligned:!0,isLineLabel:!0},d=(0,r.Lz)(this.evaluatedMeshParams.offsetX),f=(0,r.Lz)(this.evaluatedMeshParams.offsetY);if(!this._verticalPlacement||this._verticalPlacement===this._current.offsetDirection){const t=(0,F.fA)(d,-1*f),[s,i]=o.shapeBackground((0,B.Tl)((0,W.vt)(),h,t));n.recordStart(this.instanceId,this.attributeLayout,o.glyphs[0].textureBinding),this._writeTextBox(n,a,e.x,e.y,i,l,u),n.recordEnd()}if(!this._verticalPlacement||this._verticalPlacement!==this._current.offsetDirection){const t=(0,F.fA)(d,f),[s,i]=o.shapeBackground((0,B.Tl)((0,W.vt)(),h,t));u.clipAngle=p,n.recordStart(this.instanceId,this.attributeLayout,o.glyphs[0].textureBinding),this._writeTextBox(n,a,e.x,e.y,i,l,u),n.recordEnd()}}this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||this._placeFirst(d,t,1,m,!0),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||this._placeFirst(d,t,0,p,!0),n.metricEnd()}_placeBack(e,t,s,i,r,n){const a=e.clone();let o=e.backwardLength+0;for(;a.prev()&&!(o>=i);)this._placeOnSegment(a,t,o,s,-1,r,n),o+=a.length+0}_placeForward(e,t,s,i,r,n){const a=e.clone();let o=e.remainingLength+0;for(;a.next()&&!(o>=i);)this._placeOnSegment(a,t,o,s,1,r,n),o+=a.length+0}_placeFirst(e,t,s,i){let n=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const{out:a,id:o,shaping:c,zoomRange:l,referenceBounds:h}=this._current,u=c.glyphs,d=(0,r.Lz)(this.evaluatedMeshParams.offsetX),m=(0,r.Lz)(this.evaluatedMeshParams.offsetY),p=(0,F.fA)(d,m),f=(0,B.$0)((0,W.vt)(),-e.angle);(0,O.l0)(p,p,f);for(const r of u){const u=r.x>c.bounds.x?s:1-s,d=u*e.remainingLength+(1-u)*e.backwardLength,m=Math.abs(r.x+r.width/2-c.bounds.x),f=Math.max(0,this._zoomLevel+Math.log2(m/(d+0))),_=Math.max(t,n?0:f);if(r.maxZoom=Math.min(l[1],Y.GJ),r.angle=e.angle+(1-s)*Math.PI,r.minZoom=Math.max(l[0],_),this._writeLineGlyph(a,o,e.x,e.y,r,i,h,!0),(s||this._current.offsetDirection)&&this._isVisible(r.minZoom,r.maxZoom)){const e=new j.A(r.bounds.x+p[0],r.bounds.y+p[1],r.bounds.width,r.bounds.height);a.metricBoxWrite(e)}}}_placeOnSegment(e,t,s,i,n,a,o){const{out:c,id:l,shaping:h,referenceBounds:u}=this._current,d=h.glyphs,m=e.dx/e.length,p=e.dy/e.length,f={x:e.x+s*-n*m,y:e.y+s*-n*p},_=(0,r.Lz)(this.evaluatedMeshParams.offsetX),y=(0,r.Lz)(this.evaluatedMeshParams.offsetY),g=(0,F.fA)(_,y),v=(0,B.$0)((0,W.vt)(),-e.angle);(0,O.l0)(g,g,v);for(const r of d){const t=r.x>h.bounds.x?a:1-a;if(!(t&&1===n||!t&&-1===n))continue;const d=Math.abs(r.x+r.width/2-h.bounds.x),m=Math.max(0,this._zoomLevel+Math.log2(d/s)-.1),p=Math.max(i,this._zoomLevel+Math.log2(d/(s+e.length+0)));if(0!==m&&(r.angle=e.angle+(1-a)*Math.PI,r.minZoom=p,r.maxZoom=m,this._writeLineGlyph(c,l,f.x,f.y,r,o,u,!0),(a||this._current.offsetDirection)&&this._isVisible(r.minZoom,r.maxZoom))){const e=new j.A(r.bounds.x+g[0],r.bounds.y+g[1],r.bounds.width,r.bounds.height);c.metricBoxWrite(e)}}}_writeLineGlyph(e,t,s,i,r,n,a,o){if(s<0||s>l.CQ||i<0||i>l.CQ)return;e.recordStart(this.instanceId,this.attributeLayout,r.textureBinding);const{texcoords:c,offsets:h}=r,{fontSize:u,haloSize:d,outlineSize:m}=this._textMeshTransformProps;this._writeQuad(e,t,s,i,{texcoords:c,offsets:h,fontSize:u,haloSize:d,outlineSize:m,color:(0,x.Jb)(this.evaluatedMeshParams.color),isBackground:!1,referenceBounds:a,minZoom:Math.max(this._current.zoomRange[0],r.minZoom),maxZoom:Math.min(this._current.zoomRange[1],r.maxZoom),clipAngle:n,mapAligned:o,isLineLabel:!0}),e.recordEnd()}_packedZoom(e){return Math.floor(e*l.fq)/l.fq}_isVisible(e,t){let s=Math.max(this._current.zoomRange[0],e),i=Math.min(this._current.zoomRange[1],t);s=this._packedZoom(s),i=this._packedZoom(i);const r=this._packedZoom(this._zoomLevel);return s<=r&&r<=i}}function J(e,t,s){const{coords:i,lengths:r}=t,n=(0,Z.vt)(),a=(0,Z.vt)(),o=(0,Z.vt)(),c=(0,Z.vt)(),l=(0,Z.vt)(),h=(0,Z.vt)();let u=0;for(let d=0;d<r.length;d++){const t=r[d];for(let r=0;r<t;r++){const d=2*(r+u-1),m=2*(r+u),p=2*(r+u+1);r>0?(0,O.hZ)(n,i[d],i[d+1]):(0,O.hZ)(n,0,0),(0,O.hZ)(a,i[m],i[m+1]),r<t-1?(0,O.hZ)(o,i[p],i[p+1]):(0,O.hZ)(o,0,0),0===r?(0,O.hZ)(c,0,0):((0,O.jb)(c,a,n),(0,O.S8)(c,c),(0,O.hZ)(c,c[1],-c[0])),r===t-1?(0,O.hZ)(l,0,0):((0,O.jb)(l,o,a),(0,O.S8)(l,l),(0,O.hZ)(l,l[1],-l[0])),(0,O.WQ)(h,c,l),(0,O.S8)(h,h);const f=h[0]*l[0]+h[1]*l[1];0!==f&&(0,O.hs)(h,h,f),(0,O.hs)(h,h,s),e.coords.push(a[0]+h[0],a[1]+h[1])}e.lengths.push(t),u+=t}return e}var H=s(29300),K=s(26455),U=s(4480),ee=s(18690),te=s(50076),se=s(53084),ie=s(76460),re=s(81456),ne=s(95776),ae=s(59872),oe=s(32252),ce=s(27534),le=s(74014);const he=()=>ie.A.getLogger("esri.views.2d.engine.webgl.shaderGraph.techniques.mesh.MeshWriterInputEvaluator");async function ue(e,t,s,i){const{defaultValue:r,valueExpressionInfo:n,value:a}=t;if(n){if("dictionary-template"===n.type)return{...t,computed:e.createDictionaryTemplateField(n,s),defaultValue:r};const{expression:a}=n,o=await e.createComputedField({expression:a},i);return o?{...t,computed:o,defaultValue:r}:null}return{...t,computed:new le.G(a),defaultValue:r}}async function de(e,t,s){const{valueExpressionInfo:i}=t,r="dictionary-template"===i.type?e.createDictionaryTemplateField(i,s):await e.createComputedField({expression:i.expression});return r?{...t,computed:r}:null}function me(e){return"object"==typeof e&&null!=e&&(!(!("valueExpressionInfo"in e)||!e.valueExpressionInfo)||"type"in e&&"Process"===e.type&&"op"in e&&"Random"===e.op)}function pe(e){if(Array.isArray(e))for(const t of e)if(pe(t))return!0;if("object"==typeof e){if(me(e))return!0;for(const t in e)if(pe(e[t]))return!0}return!1}class fe{static async create(e,t,s,i){const r={},n=new Map,a=new Map,o=new Map,c=new Map,l=new Map,h=new Map;for(const u in s){const d=s[u];if(null!=d&&"object"==typeof d)if(Array.isArray(d)){if("object"==typeof d[0])throw new Error(`InternalError: Cannot handle ${u}. Nested array params are not supported`);r[u]=d}else if("valueExpressionInfo"in d){if(d.value){r[u]=d.value;continue}const t=await de(e,d,i);if(!t){r[u]=d.defaultValue;continue}n.set(u,t),r[u]=null}else switch(d.type){case"cim-effect-infos":if(d.effectInfos.some(e=>e.overrides.length)){a.set(u,{effects:await Promise.all(d.effectInfos.map(async t=>{const s=t.overrides.map(t=>ue(e,t,i,!1));return{effect:t.effect,compiledOverrides:(await Promise.all(s)).filter(ee.Ru)}}))});break}r[u]=d.effectInfos.map(e=>e.effect);break;case"cim-marker-placement-param":d.overrides.length&&o.set(u,{placementInfo:d,compiledOverrides:(await Promise.all(d.overrides.map(t=>ue(e,t,i,!1)))).filter(ee.Ru)}),r[u]=d.placement;break;case"text-rasterization-param":{if(d.overrides.length){const t=d.overrides.map(t=>ue(e,t,i,d.useLegacyLabelEvaluationRules??!1));c.set(u,{compiledOverrides:(await Promise.all(t)).filter(ee.Ru),rasterizationParam:d,objectIdToResourceId:new Map});continue}const s={type:"cim-rasterization-info",resource:d.resource};r[u]=await t.fetchResourceImmediate(s)??null;break}case"sprite-rasterization-param":{if(d.overrides.length){const t=d.overrides.map(t=>ue(e,t,i,!1));c.set(u,{compiledOverrides:(await Promise.all(t)).filter(ee.Ru),rasterizationParam:d,objectIdToResourceId:new Map});continue}if("animated"===d.resource.type){c.set(u,{compiledOverrides:[],rasterizationParam:d,objectIdToResourceId:new Map});continue}const s={type:"cim-rasterization-info",resource:d.resource};r[u]=await t.fetchResourceImmediate(s)??null;break}case"cim-marker-transform-param":{const{params:t}=d;if(pe(t)){const s={compiledMarkerInfos:[]};await Promise.all(t.map(async t=>{const r={props:{}};for(const s in t)if(me(t[s])){const n=await de(e,t[s],i);r.compiledExpressionMap||(r.compiledExpressionMap=new Map);const a=r.compiledExpressionMap;n&&a.set(s,n)}else r.props[s]=t[s];s.compiledMarkerInfos.push(r)})),l.set(u,s)}else r[u]={type:"cim-marker-transform-info",infos:t};break}case"animation-params":{const{params:s}=d,i=(0,oe.oo)(s);if(pe(i)){const t=await Promise.all(i.map(t=>(0,oe.N)(t,e)));h.set(u,{params:t,propertyIdToResourceId:new Map,key:u})}else{const e=(0,oe.rS)(i),s=await t.fetchResourceImmediate({type:"animation-info",resource:e});null!=s&&"sprite"===s.type&&(r[u]={dataRow:s.rect.y,dataColumn:s.rect.x})}break}default:r[u]=d}else r[u]=d}return new fe(s,r,n,a,o,c,l,h)}constructor(e,t,s,i,r,n,a,o){this.inputMeshParams=e,this._resolvedMeshParams=t,this._dynamicProperties=s,this._dynamicEffectProperties=i,this._dynamicPlacementProperties=r,this._dynamicAsyncProperties=n,this._dynamicTransformProperties=a,this._dynamicAsyncAnimations=o,this.evaluator=e=>e,this._arcadeDependencies=new Set;for(const c of this._expressions())(0,re.QY)(this._arcadeDependencies,c)}get hasDynamicProperties(){return!!(this._dynamicProperties.size||this._dynamicAsyncProperties.size||this._dynamicEffectProperties.size||this._dynamicTransformProperties.size||this._dynamicPlacementProperties.size||this._dynamicAsyncAnimations.size)}get evaluatedMeshParams(){return this._evaluatedMeshParams||(this._evaluatedMeshParams=this.evaluator(this._resolvedMeshParams)),this._evaluatedMeshParams}enqueueRequest(e,t,s){for(const r of this._dynamicAsyncProperties.values()){const n=(0,se.o8)(r.rasterizationParam.resource);"animated"===r.rasterizationParam.resource.type&&r.rasterizationParam.resource.randomizeStartTime&&(n.primitiveName="__RESERVED__PRIMITIVE__NAME__",n.startGroup=(0,ne.A)(t.getObjectId()||0));for(const{primitiveName:e,propertyName:o,computed:c,defaultValue:l,valueExpressionInfo:h}of r.compiledOverrides)try{const i="animated"===r.rasterizationParam.resource.type?n.primitiveName:e;(0,ce.Ph)(n,i,o,c,t,s,l)}catch(i){he().errorOnce(new te.A("invalid-arcade-expression","Encountered an error when evaluating the arcade expression",{error:i,valueExpressionInfo:h}))}const a=e.enqueueRequest({type:"cim-rasterization-info",resource:n});r.objectIdToResourceId.set(t.getObjectId(),a)}for(const r of this._dynamicAsyncAnimations.values()){const i=r.params.map(e=>(0,oe.SM)(e,t,s)).map(ae.Qv).map(e=>e.simplify()),n=(0,oe.aM)(i),a=e.enqueueRequest({type:"animation-info",resource:n});r.propertyIdToResourceId.set(t.getObjectId()+"."+r.key,a)}}evaluateMeshParams(e,t,s){for(const[i,r]of this._dynamicProperties.entries())this._resolvedMeshParams[i]=r.computed.readWithDefault(t,s,r.defaultValue);for(const[i,r]of this._dynamicPlacementProperties.entries())for(const{computed:e,defaultValue:n,propertyName:a}of r.compiledOverrides){const o=e.readWithDefault(t,s,n);r.placementInfo.placement[a]=o,this._resolvedMeshParams[i]=r.placementInfo.placement}for(const[i,r]of this._dynamicEffectProperties.entries())for(const e of r.effects){for(const{computed:i,defaultValue:r,propertyName:n}of e.compiledOverrides){const a=i.readWithDefault(t,s,r);e.effect[n]=a}this._resolvedMeshParams[i]=r.effects.map(e=>e.effect)}for(const[i,r]of this._dynamicTransformProperties.entries()){const e={type:"cim-marker-transform-info",infos:[]};for(const i of r.compiledMarkerInfos){const r={...i.props};if(i.compiledExpressionMap)for(const[e,n]of i.compiledExpressionMap){const i=n.computed.readWithDefault(t,s,n.defaultValue);r[e]="number"==typeof i||"boolean"==typeof i?i:n.defaultValue}e.infos.push(r)}this._resolvedMeshParams[i]=e}for(const[i,r]of this._dynamicAsyncProperties.entries()){const s=r.objectIdToResourceId.get(t.getObjectId());if(null==s)continue;const n=e.getResource(s);this._resolvedMeshParams[i]=n}for(const[i,r]of this._dynamicAsyncAnimations.entries()){const s=r.propertyIdToResourceId.get(t.getObjectId()+"."+i);if(null==s)continue;const n=e.getResource(s);this._resolvedMeshParams[i]={dataRow:n.rect.y,dataColumn:n.rect.x}}return this._evaluatedMeshParams=this.evaluator(this._resolvedMeshParams),this.evaluatedMeshParams}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}*_expressions(){for(const e of this._dynamicProperties.values())yield e.computed;for(const e of this._dynamicEffectProperties.values())for(const t of e.effects)for(const e of t.compiledOverrides)yield e.computed;for(const e of this._dynamicPlacementProperties.values())for(const t of e.compiledOverrides)yield t.computed;for(const e of this._dynamicAsyncProperties.values())for(const t of e.compiledOverrides)yield t.computed;for(const e of this._dynamicTransformProperties.values())for(const t of e.compiledMarkerInfos)if(null!=t.compiledExpressionMap)for(const e of t.compiledExpressionMap.values())yield e.computed;for(const e of this._dynamicAsyncAnimations.values())for(const t of e.params)yield*(0,oe.ci)(t)}}var _e=s(41406);class ye{async createMeshWriter(e,t,s,i,r){const n=this._getMeshWriter(i.techniqueType),a=await fe.create(e,t,i.inputParams,r),o=new n(i.id,a,i.optionalAttributes,s);return await o.loadDependencies(),o}_getMeshWriter(e){switch(e){case i.N.Fill:return S.Y;case i.N.DotDensity:return z.k;case i.N.ComplexFill:return L.KE;case i.N.PatternFill:return E.m;case i.N.GradientFill:return D.S;case i.N.OutlineFill:return k.w0;case i.N.PatternOutlineFill:return G.Q;case i.N.ComplexOutlineFill:return A.O;case i.N.Marker:return U.H;case i.N.PieChart:return _e.v;case i.N.Text:return Y.G8;case i.N.Line:return P.Bw;case i.N.TexturedLine:return K.K;case i.N.GradientStroke:return H.F;case i.N.Heatmap:return R.h;case i.N.Label:return X;case i.N.AnimatedMarker:return _;case i.N.AnimatedMarkerShift:return y;case i.N.AnimatedFill:return b;case i.N.AnimatedLine:return I;default:throw new Error("Internal Error: Mesh writer not in the registry")}}}}}]);
//# sourceMappingURL=58619.83a14374.chunk.js.map