"use strict";(self.webpackChunkn2_pier_workable=self.webpackChunkn2_pier_workable||[]).push([[71174],{71174:(e,r,t)=>{t.r(r),t.d(r,{default:()=>B});var s,i=t(35143),a=t(3825),l=t(50076),o=t(27741),n=t(77717),p=t(50346),c=t(90534),h=t(46053),u=t(21403),d=(t(81806),t(47249),t(28379)),y=t(85842),v=t(17707),_=t(13312),f=t(25515),g=t(12406),m=t(76328),S=t(36648),T=t(19502),b=t(65624),w=t(31362),M=t(11270),A=t(94729),O=t(21617),R=t(5682),Z=t(73907),k=t(13096),P=t(95363),W=t(16852),U=t(39568),C=t(731);const j=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let I=s=class extends((0,b.dM)((0,R.j)((0,Z.I)((0,m.f)((0,S.V)((0,M.q)((0,A.A)((0,T.b)((0,n.P)((0,O.J)((0,g.p)((0,w.d)(f.A))))))))))))){constructor(){super(...arguments),this.listMode="show",this.elevationInfo=new C.A({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.QP).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&_.A.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten(e=>{let{sublayers:r}=e;return r&&r.toArray().reverse()}).toArray(),a=[],l={writeSublayerStructure:!1,...s};i.forEach(e=>{const r=e.write({},l);a.push(r)}),a.some(e=>Object.keys(e).length>1)&&(r.layers=a)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map(e=>(0,c.An)(e).path):null}fetchTile(e,r,t){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:i}=s,l=this.getTileUrl(e,r,t),o={responseType:"image",signal:i,query:{...this.refreshParameters}};return(0,a.A)(l,o).then(e=>e.data)}async fetchImageBitmapTile(e,r,t){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:l}=i;if(this.fetchTile!==s.prototype.fetchTile){const s=await this.fetchTile(e,r,t,i);return(0,W.C)(s,e,r,t,l)}const o=this.getTileUrl(e,r,t),n={responseType:"blob",signal:l,query:{...this.refreshParameters}},{data:p}=await(0,a.A)(o,n);return(0,W.C)(p,e,r,t,l)}getTileUrl(e,r,t){const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,i=(0,c.x0)({...this.parsedUrl?.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),a=this.tileServers;return`${a&&a.length?a[r%a.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${i?"?"+i:""}`}loadAll(){return(0,o.g)(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new l.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new l.A("tile-layer:undefined-url","layer's url is not defined");const s=(0,k.qg)(this.parsedUrl.path);if(null!=s&&"ImageServer"===s.serverType)throw new l.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,a.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,k.Wo)(t))return this._fetchServerVersion(t,e).then(e=>{this.read({currentVersion:e})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!(0,k.Fi)(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,a.A)(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(e=>{if(e.data?.currentVersion)return e.data.currentVersion;throw new l.A("tile-layer:version-not-available","Server did not provide a version")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let r;e=e.toLowerCase();for(let t=0,s=j.length;t<s;t++)if(r=j[t],r.toLowerCase().includes(e))return(0,c.s2)("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(null==e)return[];const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[L]}};(0,i._)([(0,h.MZ)({readOnly:!0})],I.prototype,"attributionDataUrl",null),(0,i._)([(0,h.MZ)({type:["show","hide","hide-children"]})],I.prototype,"listMode",void 0),(0,i._)([(0,h.MZ)({json:{read:!0,write:!0}})],I.prototype,"blendMode",void 0),(0,i._)([(0,h.MZ)()],I.prototype,"elevationInfo",void 0),(0,i._)([(0,h.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],I.prototype,"isReference",void 0),(0,i._)([(0,h.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],I.prototype,"operationalLayerType",void 0),(0,i._)([(0,h.MZ)({type:Boolean})],I.prototype,"resampling",void 0),(0,i._)([(0,h.MZ)()],I.prototype,"sourceJSON",void 0),(0,i._)([(0,h.MZ)({type:_.A})],I.prototype,"spatialReference",void 0),(0,i._)([(0,d.w)("spatialReference",["spatialReference","tileInfo"])],I.prototype,"readSpatialReference",null),(0,i._)([(0,h.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],I.prototype,"path",void 0),(0,i._)([(0,h.MZ)({readOnly:!0})],I.prototype,"sublayers",void 0),(0,i._)([(0,v.K)("sublayers",{layers:{type:[U.A]}})],I.prototype,"writeSublayers",null),(0,i._)([(0,h.MZ)({json:{read:!1,write:!1}})],I.prototype,"popupEnabled",void 0),(0,i._)([(0,h.MZ)()],I.prototype,"tileServers",null),(0,i._)([(0,u.w)("tileServers")],I.prototype,"castTileServers",null),(0,i._)([(0,h.MZ)({readOnly:!0,json:{read:!1}})],I.prototype,"type",void 0),(0,i._)([(0,h.MZ)(P.OZ)],I.prototype,"url",void 0),I=s=(0,i._)([(0,y.$)("esri.layers.TileLayer")],I);const L=Symbol("default-fetch-tile");I.prototype.fetchTile[L]=!0;const B=I}}]);
//# sourceMappingURL=71174.96b2a4af.chunk.js.map